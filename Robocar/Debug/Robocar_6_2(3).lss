
Robocar_6_2(3).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000060  00800100  000017a0  00001834  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017a0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000115  00800160  00800160  00001894  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00001894  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000018f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000004a0  00000000  00000000  00001934  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006977  00000000  00000000  00001dd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002826  00000000  00000000  0000874b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001e08  00000000  00000000  0000af71  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b68  00000000  00000000  0000cd7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001242  00000000  00000000  0000d8e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000260a  00000000  00000000  0000eb26  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000400  00000000  00000000  00011130  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	91 c0       	rjmp	.+290    	; 0x124 <__ctors_end>
       2:	00 00       	nop
       4:	d2 c0       	rjmp	.+420    	; 0x1aa <__bad_interrupt>
       6:	00 00       	nop
       8:	d0 c0       	rjmp	.+416    	; 0x1aa <__bad_interrupt>
       a:	00 00       	nop
       c:	ce c0       	rjmp	.+412    	; 0x1aa <__bad_interrupt>
       e:	00 00       	nop
      10:	cc c0       	rjmp	.+408    	; 0x1aa <__bad_interrupt>
      12:	00 00       	nop
      14:	ca c0       	rjmp	.+404    	; 0x1aa <__bad_interrupt>
      16:	00 00       	nop
      18:	c8 c0       	rjmp	.+400    	; 0x1aa <__bad_interrupt>
      1a:	00 00       	nop
      1c:	c6 c0       	rjmp	.+396    	; 0x1aa <__bad_interrupt>
      1e:	00 00       	nop
      20:	c4 c0       	rjmp	.+392    	; 0x1aa <__bad_interrupt>
      22:	00 00       	nop
      24:	c2 c0       	rjmp	.+388    	; 0x1aa <__bad_interrupt>
      26:	00 00       	nop
      28:	c0 c0       	rjmp	.+384    	; 0x1aa <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0c 94 3c 08 	jmp	0x1078	; 0x1078 <__vector_11>
      30:	bc c0       	rjmp	.+376    	; 0x1aa <__bad_interrupt>
      32:	00 00       	nop
      34:	ba c0       	rjmp	.+372    	; 0x1aa <__bad_interrupt>
      36:	00 00       	nop
      38:	b8 c0       	rjmp	.+368    	; 0x1aa <__bad_interrupt>
      3a:	00 00       	nop
      3c:	b6 c0       	rjmp	.+364    	; 0x1aa <__bad_interrupt>
      3e:	00 00       	nop
      40:	b4 c0       	rjmp	.+360    	; 0x1aa <__bad_interrupt>
      42:	00 00       	nop
      44:	b2 c0       	rjmp	.+356    	; 0x1aa <__bad_interrupt>
      46:	00 00       	nop
      48:	b0 c0       	rjmp	.+352    	; 0x1aa <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ae c0       	rjmp	.+348    	; 0x1aa <__bad_interrupt>
      4e:	00 00       	nop
      50:	ac c0       	rjmp	.+344    	; 0x1aa <__bad_interrupt>
      52:	00 00       	nop
      54:	aa c0       	rjmp	.+340    	; 0x1aa <__bad_interrupt>
      56:	00 00       	nop
      58:	a8 c0       	rjmp	.+336    	; 0x1aa <__bad_interrupt>
      5a:	00 00       	nop
      5c:	a6 c0       	rjmp	.+332    	; 0x1aa <__bad_interrupt>
      5e:	00 00       	nop
      60:	25 c1       	rjmp	.+586    	; 0x2ac <__vector_24>
      62:	00 00       	nop
      64:	8c c2       	rjmp	.+1304   	; 0x57e <__vector_25>
      66:	00 00       	nop
      68:	a0 c0       	rjmp	.+320    	; 0x1aa <__bad_interrupt>
      6a:	00 00       	nop
      6c:	9e c0       	rjmp	.+316    	; 0x1aa <__bad_interrupt>
      6e:	00 00       	nop
      70:	9c c0       	rjmp	.+312    	; 0x1aa <__bad_interrupt>
      72:	00 00       	nop
      74:	9a c0       	rjmp	.+308    	; 0x1aa <__bad_interrupt>
      76:	00 00       	nop
      78:	98 c0       	rjmp	.+304    	; 0x1aa <__bad_interrupt>
      7a:	00 00       	nop
      7c:	96 c0       	rjmp	.+300    	; 0x1aa <__bad_interrupt>
      7e:	00 00       	nop
      80:	94 c0       	rjmp	.+296    	; 0x1aa <__bad_interrupt>
      82:	00 00       	nop
      84:	c8 c5       	rjmp	.+2960   	; 0xc16 <__vector_33>
      86:	00 00       	nop
      88:	50 c6       	rjmp	.+3232   	; 0xd2a <__vector_34>
	...

0000008c <__trampolines_end>:
      8c:	08 01       	movw	r0, r16
      8e:	06 0c       	add	r0, r6
	...

00000091 <_ZL5table>:
      91:	18 23 35 34 47 25 66 45 59 26 57 34 88 58 77 56     .#54G%fEY&W4.XwV
      a1:	6b 27 38 34 99 27 66 45 aa 6a aa 37 99 99 88 67     k'84.'fE.j.7...g
      b1:	7b 28 39 34 7a 25 66 45 bb 2b 79 34 88 58 77 56     {(94z%fE.+y4.XwV
      c1:	cc 7c cc 38 cc 7c 99 45 bb bb bb 7b aa aa 99 78     .|.8.|.E...{...x
      d1:	8f 29 3a 34 4b 25 66 45 cc 29 57 34 88 58 77 56     .):4K%fE.)W4.XwV
      e1:	dd 2d 8d 34 bb 29 66 45 aa 6a aa 37 99 99 88 67     .-.4.)fE.j.7...g
      f1:	ee 8e ee 39 ee 8e aa 45 ee 8e ee 39 bb 8b 77 56     ...9...E...9..wV
     101:	dd dd dd 8d dd dd dd 49 cc cc cc cc bb bb aa 89     .......I........
	...

00000112 <__ctors_start>:
     112:	83 01       	movw	r16, r6
     114:	5c 02       	muls	r21, r28
     116:	26 03       	mulsu	r18, r22
     118:	83 04       	cpc	r8, r3
     11a:	e7 04       	cpc	r14, r7
     11c:	34 06       	cpc	r3, r20
     11e:	e2 06       	cpc	r14, r18
     120:	ff 08       	sbc	r15, r15
     122:	24 0a       	sbc	r2, r20

00000124 <__ctors_end>:
     124:	11 24       	eor	r1, r1
     126:	1f be       	out	0x3f, r1	; 63
     128:	cf ef       	ldi	r28, 0xFF	; 255
     12a:	d0 e4       	ldi	r29, 0x40	; 64
     12c:	de bf       	out	0x3e, r29	; 62
     12e:	cd bf       	out	0x3d, r28	; 61

00000130 <_Z14__hardwareInitv>:
#define LEDON() PORTA |= _BV(2)
#define LEDOFF() PORTA &= ~_BV(2)


void __attribute__((section(".init3"), naked)) __hardwareInit(void) {
    DDRA |= _BV(1);		// POWER
     130:	09 9a       	sbi	0x01, 1	; 1
    DDRA |= _BV(2);		// LED
     132:	0a 9a       	sbi	0x01, 2	; 1
    DDRA |= _BV(7);		// LCD strobe
     134:	0f 9a       	sbi	0x01, 7	; 1
    DDRB |= _BV(2);		// HC138 GATE
     136:	22 9a       	sbi	0x04, 2	; 4

    //SPI init (USART1 in MSPIM)
    DDRD |= _BV(3);			// TXD1 output
     138:	53 9a       	sbi	0x0a, 3	; 10
    DDRD |= _BV(4);			// XCLK1 output
     13a:	54 9a       	sbi	0x0a, 4	; 10
    UBRR1 = 0;
     13c:	ec ec       	ldi	r30, 0xCC	; 204
     13e:	f0 e0       	ldi	r31, 0x00	; 0
     140:	11 82       	std	Z+1, r1	; 0x01
     142:	10 82       	st	Z, r1
    UCSR1C = 0b11000011;	// MSPIM, MSB first, idle high (write)
     144:	83 ec       	ldi	r24, 0xC3	; 195
     146:	80 93 ca 00 	sts	0x00CA, r24
    UCSR1B = 0x18;			// enable transmitter and receiver
     14a:	88 e1       	ldi	r24, 0x18	; 24
     14c:	80 93 c9 00 	sts	0x00C9, r24
    UBRR1 = 0;				// set clock to fosc/2
     150:	11 82       	std	Z+1, r1	; 0x01
     152:	10 82       	st	Z, r1

    LL::write574(LL::U4, 0);
     154:	60 e0       	ldi	r22, 0x00	; 0
     156:	80 e4       	ldi	r24, 0x40	; 64
     158:	bb d4       	rcall	.+2422   	; 0xad0 <_ZN2LL8write574ENS_5HC574Ec>
    LL::write574(LL::U5, 0);
     15a:	60 e0       	ldi	r22, 0x00	; 0
     15c:	80 e6       	ldi	r24, 0x60	; 96
     15e:	b8 d4       	rcall	.+2416   	; 0xad0 <_ZN2LL8write574ENS_5HC574Ec>

00000160 <__do_copy_data>:
     160:	11 e0       	ldi	r17, 0x01	; 1
     162:	a0 e0       	ldi	r26, 0x00	; 0
     164:	b1 e0       	ldi	r27, 0x01	; 1
     166:	e0 ea       	ldi	r30, 0xA0	; 160
     168:	f7 e1       	ldi	r31, 0x17	; 23
     16a:	00 e0       	ldi	r16, 0x00	; 0
     16c:	0b bf       	out	0x3b, r16	; 59
     16e:	02 c0       	rjmp	.+4      	; 0x174 <__do_copy_data+0x14>
     170:	07 90       	elpm	r0, Z+
     172:	0d 92       	st	X+, r0
     174:	a0 36       	cpi	r26, 0x60	; 96
     176:	b1 07       	cpc	r27, r17
     178:	d9 f7       	brne	.-10     	; 0x170 <__do_copy_data+0x10>

0000017a <__do_clear_bss>:
     17a:	22 e0       	ldi	r18, 0x02	; 2
     17c:	a0 e6       	ldi	r26, 0x60	; 96
     17e:	b1 e0       	ldi	r27, 0x01	; 1
     180:	01 c0       	rjmp	.+2      	; 0x184 <.do_clear_bss_start>

00000182 <.do_clear_bss_loop>:
     182:	1d 92       	st	X+, r1

00000184 <.do_clear_bss_start>:
     184:	a5 37       	cpi	r26, 0x75	; 117
     186:	b2 07       	cpc	r27, r18
     188:	e1 f7       	brne	.-8      	; 0x182 <.do_clear_bss_loop>

0000018a <__do_global_ctors>:
     18a:	10 e0       	ldi	r17, 0x00	; 0
     18c:	c2 e9       	ldi	r28, 0x92	; 146
     18e:	d0 e0       	ldi	r29, 0x00	; 0
     190:	04 c0       	rjmp	.+8      	; 0x19a <__do_global_ctors+0x10>
     192:	21 97       	sbiw	r28, 0x01	; 1
     194:	fe 01       	movw	r30, r28
     196:	0e 94 65 0a 	call	0x14ca	; 0x14ca <__tablejump2__>
     19a:	c9 38       	cpi	r28, 0x89	; 137
     19c:	d1 07       	cpc	r29, r17
     19e:	c9 f7       	brne	.-14     	; 0x192 <__do_global_ctors+0x8>

000001a0 <_Z7__powerv>:
}

void __attribute__((section(".init8"), naked)) __power(void) {
    POWERUP();
     1a0:	11 9a       	sbi	0x02, 1	; 2

000001a2 <_Z5__seiv>:
     1a2:	78 94       	sei
     1a4:	13 d4       	rcall	.+2086   	; 0x9cc <main>
     1a6:	0c 94 ce 0b 	jmp	0x179c	; 0x179c <_exit>

000001aa <__bad_interrupt>:
     1aa:	2a cf       	rjmp	.-428    	; 0x0 <__vectors>

000001ac <_ZN12_GLOBAL__N_14Test7timeoutEv>:
	void start(){
		adcObj.start();
	}
	int getChannel(char channel){
		return adcObj.getChannel(channel);
	}
     1ac:	28 e2       	ldi	r18, 0x28	; 40
     1ae:	30 e0       	ldi	r19, 0x00	; 0
     1b0:	fc 01       	movw	r30, r24
     1b2:	35 83       	std	Z+5, r19	; 0x05
     1b4:	24 83       	std	Z+4, r18	; 0x04
     1b6:	ea e7       	ldi	r30, 0x7A	; 122
     1b8:	f0 e0       	ldi	r31, 0x00	; 0
     1ba:	89 e8       	ldi	r24, 0x89	; 137
     1bc:	80 83       	st	Z, r24
     1be:	80 e6       	ldi	r24, 0x60	; 96
     1c0:	80 93 7c 00 	sts	0x007C, r24
     1c4:	80 81       	ld	r24, Z
     1c6:	80 64       	ori	r24, 0x40	; 64
     1c8:	80 83       	st	Z, r24
     1ca:	08 95       	ret

000001cc <_ZThn6_N12_GLOBAL__N_14Test4taskEv>:
     1cc:	cf 93       	push	r28
     1ce:	df 93       	push	r29
     1d0:	ec 01       	movw	r28, r24
     1d2:	20 91 79 00 	lds	r18, 0x0079
     1d6:	30 e0       	ldi	r19, 0x00	; 0
     1d8:	1f 82       	std	Y+7, r1	; 0x07
     1da:	2a 30       	cpi	r18, 0x0A	; 10
     1dc:	31 05       	cpc	r19, r1
     1de:	78 f4       	brcc	.+30     	; 0x1fe <_ZThn6_N12_GLOBAL__N_14Test4taskEv+0x32>
     1e0:	80 e3       	ldi	r24, 0x30	; 48
     1e2:	fe 01       	movw	r30, r28
     1e4:	36 97       	sbiw	r30, 0x06	; 6
     1e6:	82 87       	std	Z+10, r24	; 0x0a
     1e8:	83 87       	std	Z+11, r24	; 0x0b
     1ea:	80 91 79 00 	lds	r24, 0x0079
     1ee:	4a e0       	ldi	r20, 0x0A	; 10
     1f0:	be 01       	movw	r22, r28
     1f2:	6a 5f       	subi	r22, 0xFA	; 250
     1f4:	7f 4f       	sbci	r23, 0xFF	; 255
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	0e 94 9b 0b 	call	0x1736	; 0x1736 <__itoa_ncheck>
     1fc:	18 c0       	rjmp	.+48     	; 0x22e <_ZThn6_N12_GLOBAL__N_14Test4taskEv+0x62>
     1fe:	24 36       	cpi	r18, 0x64	; 100
     200:	31 05       	cpc	r19, r1
     202:	60 f4       	brcc	.+24     	; 0x21c <_ZThn6_N12_GLOBAL__N_14Test4taskEv+0x50>
     204:	80 e3       	ldi	r24, 0x30	; 48
     206:	8c 83       	std	Y+4, r24	; 0x04
     208:	80 91 79 00 	lds	r24, 0x0079
     20c:	4a e0       	ldi	r20, 0x0A	; 10
     20e:	be 01       	movw	r22, r28
     210:	6b 5f       	subi	r22, 0xFB	; 251
     212:	7f 4f       	sbci	r23, 0xFF	; 255
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	0e 94 9b 0b 	call	0x1736	; 0x1736 <__itoa_ncheck>
     21a:	09 c0       	rjmp	.+18     	; 0x22e <_ZThn6_N12_GLOBAL__N_14Test4taskEv+0x62>
     21c:	80 91 79 00 	lds	r24, 0x0079
     220:	4a e0       	ldi	r20, 0x0A	; 10
     222:	be 01       	movw	r22, r28
     224:	6c 5f       	subi	r22, 0xFC	; 252
     226:	7f 4f       	sbci	r23, 0xFF	; 255
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	0e 94 9b 0b 	call	0x1736	; 0x1736 <__itoa_ncheck>
     22e:	80 91 79 00 	lds	r24, 0x0079
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	9a 87       	std	Y+10, r25	; 0x0a
     236:	89 87       	std	Y+9, r24	; 0x09
     238:	df 91       	pop	r29
     23a:	cf 91       	pop	r28
     23c:	08 95       	ret

0000023e <_ZN12_GLOBAL__N_14Test4taskEv>:
     23e:	cf 93       	push	r28
     240:	df 93       	push	r29
     242:	ec 01       	movw	r28, r24
     244:	20 91 79 00 	lds	r18, 0x0079
     248:	30 e0       	ldi	r19, 0x00	; 0
     24a:	1d 86       	std	Y+13, r1	; 0x0d
     24c:	2a 30       	cpi	r18, 0x0A	; 10
     24e:	31 05       	cpc	r19, r1
     250:	68 f4       	brcc	.+26     	; 0x26c <_ZN12_GLOBAL__N_14Test4taskEv+0x2e>
     252:	80 e3       	ldi	r24, 0x30	; 48
     254:	8a 87       	std	Y+10, r24	; 0x0a
     256:	8b 87       	std	Y+11, r24	; 0x0b
     258:	80 91 79 00 	lds	r24, 0x0079
     25c:	4a e0       	ldi	r20, 0x0A	; 10
     25e:	be 01       	movw	r22, r28
     260:	64 5f       	subi	r22, 0xF4	; 244
     262:	7f 4f       	sbci	r23, 0xFF	; 255
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	0e 94 9b 0b 	call	0x1736	; 0x1736 <__itoa_ncheck>
     26a:	18 c0       	rjmp	.+48     	; 0x29c <_ZN12_GLOBAL__N_14Test4taskEv+0x5e>
     26c:	24 36       	cpi	r18, 0x64	; 100
     26e:	31 05       	cpc	r19, r1
     270:	60 f4       	brcc	.+24     	; 0x28a <_ZN12_GLOBAL__N_14Test4taskEv+0x4c>
     272:	80 e3       	ldi	r24, 0x30	; 48
     274:	8a 87       	std	Y+10, r24	; 0x0a
     276:	80 91 79 00 	lds	r24, 0x0079
     27a:	4a e0       	ldi	r20, 0x0A	; 10
     27c:	be 01       	movw	r22, r28
     27e:	65 5f       	subi	r22, 0xF5	; 245
     280:	7f 4f       	sbci	r23, 0xFF	; 255
     282:	90 e0       	ldi	r25, 0x00	; 0
     284:	0e 94 9b 0b 	call	0x1736	; 0x1736 <__itoa_ncheck>
     288:	09 c0       	rjmp	.+18     	; 0x29c <_ZN12_GLOBAL__N_14Test4taskEv+0x5e>
     28a:	80 91 79 00 	lds	r24, 0x0079
     28e:	4a e0       	ldi	r20, 0x0A	; 10
     290:	be 01       	movw	r22, r28
     292:	66 5f       	subi	r22, 0xF6	; 246
     294:	7f 4f       	sbci	r23, 0xFF	; 255
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	0e 94 9b 0b 	call	0x1736	; 0x1736 <__itoa_ncheck>
     29c:	80 91 79 00 	lds	r24, 0x0079
     2a0:	90 e0       	ldi	r25, 0x00	; 0
     2a2:	98 8b       	std	Y+16, r25	; 0x10
     2a4:	8f 87       	std	Y+15, r24	; 0x0f
     2a6:	df 91       	pop	r29
     2a8:	cf 91       	pop	r28
     2aa:	08 95       	ret

000002ac <__vector_24>:
     2ac:	1f 92       	push	r1
     2ae:	0f 92       	push	r0
     2b0:	0f b6       	in	r0, 0x3f	; 63
     2b2:	0f 92       	push	r0
     2b4:	11 24       	eor	r1, r1
     2b6:	0b b6       	in	r0, 0x3b	; 59
     2b8:	0f 92       	push	r0
     2ba:	2f 93       	push	r18
     2bc:	3f 93       	push	r19
     2be:	4f 93       	push	r20
     2c0:	5f 93       	push	r21
     2c2:	6f 93       	push	r22
     2c4:	7f 93       	push	r23
     2c6:	8f 93       	push	r24
     2c8:	9f 93       	push	r25
     2ca:	af 93       	push	r26
     2cc:	bf 93       	push	r27
     2ce:	ef 93       	push	r30
     2d0:	ff 93       	push	r31
     2d2:	86 e6       	ldi	r24, 0x66	; 102
     2d4:	91 e0       	ldi	r25, 0x01	; 1
     2d6:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <_Z9isrAppendR4Task>
     2da:	ff 91       	pop	r31
     2dc:	ef 91       	pop	r30
     2de:	bf 91       	pop	r27
     2e0:	af 91       	pop	r26
     2e2:	9f 91       	pop	r25
     2e4:	8f 91       	pop	r24
     2e6:	7f 91       	pop	r23
     2e8:	6f 91       	pop	r22
     2ea:	5f 91       	pop	r21
     2ec:	4f 91       	pop	r20
     2ee:	3f 91       	pop	r19
     2f0:	2f 91       	pop	r18
     2f2:	0f 90       	pop	r0
     2f4:	0b be       	out	0x3b, r0	; 59
     2f6:	0f 90       	pop	r0
     2f8:	0f be       	out	0x3f, r0	; 63
     2fa:	0f 90       	pop	r0
     2fc:	1f 90       	pop	r1
     2fe:	18 95       	reti

00000300 <_ZN3Adc8getValueEv>:
     300:	8a e6       	ldi	r24, 0x6A	; 106
     302:	91 e0       	ldi	r25, 0x01	; 1
     304:	08 95       	ret

00000306 <_GLOBAL__sub_I___vector_24>:
     306:	cf 93       	push	r28
     308:	df 93       	push	r29
#ifndef __TIMER_H__
#define __TIMER_H__

#include "List.h"

class Timer : Element {
     30a:	82 e6       	ldi	r24, 0x62	; 98
     30c:	91 e0       	ldi	r25, 0x01	; 1
     30e:	c2 d7       	rcall	.+3972   	; 0x1294 <_ZN7ElementC1Ev>
     310:	c0 e6       	ldi	r28, 0x60	; 96
     312:	d1 e0       	ldi	r29, 0x01	; 1
     314:	8c e0       	ldi	r24, 0x0C	; 12
     316:	91 e0       	ldi	r25, 0x01	; 1
     318:	99 83       	std	Y+1, r25	; 0x01
     31a:	88 83       	st	Y, r24
#ifndef __TASK_H__
#define __TASK_H__

#include "List.h"

class Task : Element {
     31c:	88 e6       	ldi	r24, 0x68	; 104
     31e:	91 e0       	ldi	r25, 0x01	; 1
     320:	b9 d7       	rcall	.+3954   	; 0x1294 <_ZN7ElementC1Ev>

namespace {
	class Test : Timer, public Task {
	public:
	char a[4];
		Test(void) {
     322:	82 e1       	ldi	r24, 0x12	; 18
     324:	91 e0       	ldi	r25, 0x01	; 1
     326:	99 83       	std	Y+1, r25	; 0x01
     328:	88 83       	st	Y, r24
     32a:	8a e1       	ldi	r24, 0x1A	; 26
     32c:	91 e0       	ldi	r25, 0x01	; 1
     32e:	9f 83       	std	Y+7, r25	; 0x07
     330:	8e 83       	std	Y+6, r24	; 0x06
			currentChannel = 0;
     332:	18 a2       	std	Y+32, r1	; 0x20
     334:	1f 8e       	std	Y+31, r1	; 0x1f
		void setChannels(char channels){
			this->channels = channels;
			currentChannel = 0;
		}
		void start(){
			count = 40;
     336:	88 e2       	ldi	r24, 0x28	; 40
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	9d 83       	std	Y+5, r25	; 0x05
     33c:	8c 83       	std	Y+4, r24	; 0x04
			timer::add(*this);
     33e:	ce 01       	movw	r24, r28
     340:	1d d5       	rcall	.+2618   	; 0xd7c <_ZN5timer3addER5Timer>
		adcObj.start();
	}
	int getChannel(char channel){
		return adcObj.getChannel(channel);
	}
     342:	df 91       	pop	r29
     344:	cf 91       	pop	r28
     346:	08 95       	ret

00000348 <_ZN7Buttons7timeoutEv>:
		return buttons.bf1;
	}
	char * getBF2(){
		return buttons.bf2;
	}
	int getServo(){return buttons.servoNumber;}
     348:	cf 92       	push	r12
     34a:	df 92       	push	r13
     34c:	ef 92       	push	r14
     34e:	ff 92       	push	r15
     350:	0f 93       	push	r16
     352:	1f 93       	push	r17
     354:	cf 93       	push	r28
     356:	df 93       	push	r29
     358:	8c 01       	movw	r16, r24
     35a:	88 e2       	ldi	r24, 0x28	; 40
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	d8 01       	movw	r26, r16
     360:	15 96       	adiw	r26, 0x05	; 5
     362:	9c 93       	st	X, r25
     364:	8e 93       	st	-X, r24
     366:	14 97       	sbiw	r26, 0x04	; 4
     368:	61 e0       	ldi	r22, 0x01	; 1
     36a:	8c e8       	ldi	r24, 0x8C	; 140
     36c:	97 d3       	rcall	.+1838   	; 0xa9c <_ZN2LL7read541ENS_5HC541Eh>
     36e:	d8 2f       	mov	r29, r24
     370:	f8 01       	movw	r30, r16
     372:	c2 a5       	ldd	r28, Z+42	; 0x2a
     374:	c8 27       	eor	r28, r24
     376:	98 2f       	mov	r25, r24
     378:	98 7b       	andi	r25, 0xB8	; 184
     37a:	98 3b       	cpi	r25, 0xB8	; 184
     37c:	51 f5       	brne	.+84     	; 0x3d2 <_ZN7Buttons7timeoutEv+0x8a>
     37e:	c0 df       	rcall	.-128    	; 0x300 <_ZN3Adc8getValueEv>
     380:	bc 01       	movw	r22, r24
     382:	80 e4       	ldi	r24, 0x40	; 64
     384:	95 d2       	rcall	.+1322   	; 0x8b0 <_ZN3LCD5printEhPc>
     386:	0f 2e       	mov	r0, r31
     388:	f9 e7       	ldi	r31, 0x79	; 121
     38a:	cf 2e       	mov	r12, r31
     38c:	d1 2c       	mov	r13, r1
     38e:	f0 2d       	mov	r31, r0
     390:	d6 01       	movw	r26, r12
     392:	8c 91       	ld	r24, X
     394:	f8 01       	movw	r30, r16
     396:	66 81       	ldd	r22, Z+6	; 0x06
     398:	77 81       	ldd	r23, Z+7	; 0x07
     39a:	0f 2e       	mov	r0, r31
     39c:	fe e4       	ldi	r31, 0x4E	; 78
     39e:	ff 2e       	mov	r15, r31
     3a0:	f0 2d       	mov	r31, r0
     3a2:	f8 9e       	mul	r15, r24
     3a4:	c0 01       	movw	r24, r0
     3a6:	11 24       	eor	r1, r1
     3a8:	87 56       	subi	r24, 0x67	; 103
     3aa:	9a 4e       	sbci	r25, 0xEA	; 234
     3ac:	2c d4       	rcall	.+2136   	; 0xc06 <_ZN5Servo3setEii>
     3ae:	d6 01       	movw	r26, r12
     3b0:	8c 91       	ld	r24, X
     3b2:	d8 01       	movw	r26, r16
     3b4:	16 96       	adiw	r26, 0x06	; 6
     3b6:	ed 91       	ld	r30, X+
     3b8:	fc 91       	ld	r31, X
     3ba:	17 97       	sbiw	r26, 0x07	; 7
     3bc:	ee 0f       	add	r30, r30
     3be:	ff 1f       	adc	r31, r31
     3c0:	e0 0f       	add	r30, r16
     3c2:	f1 1f       	adc	r31, r17
     3c4:	f8 9e       	mul	r15, r24
     3c6:	c0 01       	movw	r24, r0
     3c8:	11 24       	eor	r1, r1
     3ca:	87 56       	subi	r24, 0x67	; 103
     3cc:	9a 4e       	sbci	r25, 0xEA	; 234
     3ce:	90 af       	std	Z+56, r25	; 0x38
     3d0:	87 ab       	std	Z+55, r24	; 0x37
     3d2:	cc 23       	and	r28, r28
     3d4:	09 f4       	brne	.+2      	; 0x3d8 <_ZN7Buttons7timeoutEv+0x90>
     3d6:	61 c0       	rjmp	.+194    	; 0x49a <_ZN7Buttons7timeoutEv+0x152>
     3d8:	f8 01       	movw	r30, r16
     3da:	d2 a7       	std	Z+42, r29	; 0x2a
     3dc:	c0 ff       	sbrs	r28, 0
     3de:	1f c0       	rjmp	.+62     	; 0x41e <_ZN7Buttons7timeoutEv+0xd6>
     3e0:	d0 ff       	sbrs	r29, 0
     3e2:	1d c0       	rjmp	.+58     	; 0x41e <_ZN7Buttons7timeoutEv+0xd6>
     3e4:	83 a5       	ldd	r24, Z+43	; 0x2b
     3e6:	81 11       	cpse	r24, r1
     3e8:	10 c0       	rjmp	.+32     	; 0x40a <_ZN7Buttons7timeoutEv+0xc2>
     3ea:	85 a5       	ldd	r24, Z+45	; 0x2d
     3ec:	96 a5       	ldd	r25, Z+46	; 0x2e
     3ee:	f8 d6       	rcall	.+3568   	; 0x11e0 <_ZN5Wheel4setPEi>
     3f0:	d8 01       	movw	r26, r16
     3f2:	9f 96       	adiw	r26, 0x2f	; 47
     3f4:	8d 91       	ld	r24, X+
     3f6:	9c 91       	ld	r25, X
     3f8:	d0 97       	sbiw	r26, 0x30	; 48
     3fa:	f7 d6       	rcall	.+3566   	; 0x11ea <_ZN5Wheel4setIEi>
     3fc:	f8 01       	movw	r30, r16
     3fe:	81 a9       	ldd	r24, Z+49	; 0x31
     400:	92 a9       	ldd	r25, Z+50	; 0x32
     402:	f8 d6       	rcall	.+3568   	; 0x11f4 <_ZN5Wheel4setDEi>
     404:	84 ea       	ldi	r24, 0xA4	; 164
     406:	70 d6       	rcall	.+3296   	; 0x10e8 <_ZN5Wheel4moveENS_8_commandE>
     408:	02 c0       	rjmp	.+4      	; 0x40e <_ZN7Buttons7timeoutEv+0xc6>
     40a:	80 e0       	ldi	r24, 0x00	; 0
     40c:	6d d6       	rcall	.+3290   	; 0x10e8 <_ZN5Wheel4moveENS_8_commandE>
     40e:	d8 01       	movw	r26, r16
     410:	9b 96       	adiw	r26, 0x2b	; 43
     412:	9c 91       	ld	r25, X
     414:	9b 97       	sbiw	r26, 0x2b	; 43
     416:	81 e0       	ldi	r24, 0x01	; 1
     418:	89 27       	eor	r24, r25
     41a:	9b 96       	adiw	r26, 0x2b	; 43
     41c:	8c 93       	st	X, r24
     41e:	c6 ff       	sbrs	r28, 6
     420:	14 c0       	rjmp	.+40     	; 0x44a <_ZN7Buttons7timeoutEv+0x102>
     422:	d6 ff       	sbrs	r29, 6
     424:	12 c0       	rjmp	.+36     	; 0x44a <_ZN7Buttons7timeoutEv+0x102>
     426:	d8 d0       	rcall	.+432    	; 0x5d8 <_ZN6EEPROM6retoreEv>
     428:	d4 d0       	rcall	.+424    	; 0x5d2 <_ZN6EEPROM8getServoEv>
     42a:	6c 01       	movw	r12, r24
     42c:	e1 2c       	mov	r14, r1
     42e:	f1 2c       	mov	r15, r1
     430:	b7 01       	movw	r22, r14
     432:	f6 01       	movw	r30, r12
     434:	81 91       	ld	r24, Z+
     436:	91 91       	ld	r25, Z+
     438:	6f 01       	movw	r12, r30
     43a:	e5 d3       	rcall	.+1994   	; 0xc06 <_ZN5Servo3setEii>
     43c:	ff ef       	ldi	r31, 0xFF	; 255
     43e:	ef 1a       	sub	r14, r31
     440:	ff 0a       	sbc	r15, r31
     442:	84 e0       	ldi	r24, 0x04	; 4
     444:	e8 16       	cp	r14, r24
     446:	f1 04       	cpc	r15, r1
     448:	99 f7       	brne	.-26     	; 0x430 <_ZN7Buttons7timeoutEv+0xe8>
     44a:	c2 ff       	sbrs	r28, 2
     44c:	13 c0       	rjmp	.+38     	; 0x474 <_ZN7Buttons7timeoutEv+0x12c>
     44e:	d2 ff       	sbrs	r29, 2
     450:	11 c0       	rjmp	.+34     	; 0x474 <_ZN7Buttons7timeoutEv+0x12c>
     452:	d8 01       	movw	r26, r16
     454:	16 96       	adiw	r26, 0x06	; 6
     456:	8d 91       	ld	r24, X+
     458:	9c 91       	ld	r25, X
     45a:	17 97       	sbiw	r26, 0x07	; 7
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	84 30       	cpi	r24, 0x04	; 4
     460:	91 05       	cpc	r25, r1
     462:	29 f0       	breq	.+10     	; 0x46e <_ZN7Buttons7timeoutEv+0x126>
     464:	17 96       	adiw	r26, 0x07	; 7
     466:	9c 93       	st	X, r25
     468:	8e 93       	st	-X, r24
     46a:	16 97       	sbiw	r26, 0x06	; 6
     46c:	03 c0       	rjmp	.+6      	; 0x474 <_ZN7Buttons7timeoutEv+0x12c>
     46e:	f8 01       	movw	r30, r16
     470:	17 82       	std	Z+7, r1	; 0x07
     472:	16 82       	std	Z+6, r1	; 0x06
     474:	c1 ff       	sbrs	r28, 1
     476:	11 c0       	rjmp	.+34     	; 0x49a <_ZN7Buttons7timeoutEv+0x152>
     478:	d1 ff       	sbrs	r29, 1
     47a:	0f c0       	rjmp	.+30     	; 0x49a <_ZN7Buttons7timeoutEv+0x152>
     47c:	aa d0       	rcall	.+340    	; 0x5d2 <_ZN6EEPROM8getServoEv>
     47e:	f8 01       	movw	r30, r16
     480:	f7 96       	adiw	r30, 0x37	; 55
     482:	dc 01       	movw	r26, r24
     484:	98 01       	movw	r18, r16
     486:	21 5c       	subi	r18, 0xC1	; 193
     488:	3f 4f       	sbci	r19, 0xFF	; 255
     48a:	81 91       	ld	r24, Z+
     48c:	91 91       	ld	r25, Z+
     48e:	8d 93       	st	X+, r24
     490:	9d 93       	st	X+, r25
     492:	e2 17       	cp	r30, r18
     494:	f3 07       	cpc	r31, r19
     496:	c9 f7       	brne	.-14     	; 0x48a <_ZN7Buttons7timeoutEv+0x142>
     498:	c5 d0       	rcall	.+394    	; 0x624 <_ZN6EEPROM4saveEv>
     49a:	df 91       	pop	r29
     49c:	cf 91       	pop	r28
     49e:	1f 91       	pop	r17
     4a0:	0f 91       	pop	r16
     4a2:	ff 90       	pop	r15
     4a4:	ef 90       	pop	r14
     4a6:	df 90       	pop	r13
     4a8:	cf 90       	pop	r12
     4aa:	08 95       	ret

000004ac <_ZN6Button6getBF1Ev>:
     4ac:	89 e8       	ldi	r24, 0x89	; 137
     4ae:	91 e0       	ldi	r25, 0x01	; 1
     4b0:	08 95       	ret

000004b2 <_ZN6Button6getBF2Ev>:
     4b2:	8a e9       	ldi	r24, 0x9A	; 154
     4b4:	91 e0       	ldi	r25, 0x01	; 1
     4b6:	08 95       	ret

000004b8 <_GLOBAL__sub_I__ZN6Button6getBF1Ev>:
     4b8:	cf 93       	push	r28
     4ba:	df 93       	push	r29
     4bc:	83 e8       	ldi	r24, 0x83	; 131
     4be:	91 e0       	ldi	r25, 0x01	; 1
     4c0:	e9 d6       	rcall	.+3538   	; 0x1294 <_ZN7ElementC1Ev>
static class Buttons : Timer {
public:
	int servoNumber=0;
	char bf1[17];
	char bf2[17];
    Buttons(void) {
     4c2:	c1 e8       	ldi	r28, 0x81	; 129
     4c4:	d1 e0       	ldi	r29, 0x01	; 1
     4c6:	80 e2       	ldi	r24, 0x20	; 32
     4c8:	91 e0       	ldi	r25, 0x01	; 1
     4ca:	99 83       	std	Y+1, r25	; 0x01
     4cc:	88 83       	st	Y, r24
     4ce:	1f 82       	std	Y+7, r1	; 0x07
     4d0:	1e 82       	std	Y+6, r1	; 0x06
		kP = 11;
     4d2:	8b e0       	ldi	r24, 0x0B	; 11
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	9e a7       	std	Y+46, r25	; 0x2e
     4d8:	8d a7       	std	Y+45, r24	; 0x2d
		kI = 56;
     4da:	88 e3       	ldi	r24, 0x38	; 56
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	98 ab       	std	Y+48, r25	; 0x30
     4e0:	8f a7       	std	Y+47, r24	; 0x2f
		kD = 60;
     4e2:	8c e3       	ldi	r24, 0x3C	; 60
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	9a ab       	std	Y+50, r25	; 0x32
     4e8:	89 ab       	std	Y+49, r24	; 0x31
		// 13, 63, 56,speed 100
		// 19, 63, 63 ,speed = 160
		// 24
		Wheel::setP(kP);
     4ea:	8b e0       	ldi	r24, 0x0B	; 11
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	78 d6       	rcall	.+3312   	; 0x11e0 <_ZN5Wheel4setPEi>
		Wheel::setI(kI);
     4f0:	8f a5       	ldd	r24, Y+47	; 0x2f
     4f2:	98 a9       	ldd	r25, Y+48	; 0x30
     4f4:	7a d6       	rcall	.+3316   	; 0x11ea <_ZN5Wheel4setIEi>
		Wheel::setD(kD);
     4f6:	89 a9       	ldd	r24, Y+49	; 0x31
     4f8:	9a a9       	ldd	r25, Y+50	; 0x32
     4fa:	7c d6       	rcall	.+3320   	; 0x11f4 <_ZN5Wheel4setDEi>
		Wheel::setSpeed(160);
     4fc:	80 ea       	ldi	r24, 0xA0	; 160
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	ee d5       	rcall	.+3036   	; 0x10de <_ZN5Wheel8setSpeedEi>
		PIDselecter = 0;
     502:	1c aa       	std	Y+52, r1	; 0x34
     504:	1b aa       	std	Y+51, r1	; 0x33
		troggleState = false;
     506:	1b a6       	std	Y+43, r1	; 0x2b
     508:	ea e9       	ldi	r30, 0x9A	; 154
     50a:	f1 e0       	ldi	r31, 0x01	; 1
     50c:	a9 e8       	ldi	r26, 0x89	; 137
     50e:	b1 e0       	ldi	r27, 0x01	; 1
     510:	2a ea       	ldi	r18, 0xAA	; 170
     512:	31 e0       	ldi	r19, 0x01	; 1
		for (int i = 0; i < 16; i++) bf1[i] = bf2[i] = ' ';
     514:	80 e2       	ldi	r24, 0x20	; 32
     516:	81 93       	st	Z+, r24
     518:	8d 93       	st	X+, r24
     51a:	e2 17       	cp	r30, r18
     51c:	f3 07       	cpc	r31, r19
     51e:	d9 f7       	brne	.-10     	; 0x516 <_GLOBAL__sub_I__ZN6Button6getBF1Ev+0x5e>
		speed = 5;
     520:	c1 e8       	ldi	r28, 0x81	; 129
     522:	d1 e0       	ldi	r29, 0x01	; 1
     524:	85 e0       	ldi	r24, 0x05	; 5
     526:	8c a7       	std	Y+44, r24	; 0x2c
		
        count = PERIOD;
     528:	88 e2       	ldi	r24, 0x28	; 40
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	9d 83       	std	Y+5, r25	; 0x05
     52e:	8c 83       	std	Y+4, r24	; 0x04
        state = LL::read541(LL::BUTTONS, 1);
     530:	61 e0       	ldi	r22, 0x01	; 1
     532:	8c e8       	ldi	r24, 0x8C	; 140
     534:	b3 d2       	rcall	.+1382   	; 0xa9c <_ZN2LL7read541ENS_5HC541Eh>
     536:	8a a7       	std	Y+42, r24	; 0x2a
        timer::add(*this);		//timer3 has to be already instantiated
     538:	ce 01       	movw	r24, r28
     53a:	20 d4       	rcall	.+2112   	; 0xd7c <_ZN5timer3addER5Timer>
		EEPROM::retore();
     53c:	4d d0       	rcall	.+154    	; 0x5d8 <_ZN6EEPROM6retoreEv>
	}
	char * getBF2(){
		return buttons.bf2;
	}
	int getServo(){return buttons.servoNumber;}
     53e:	df 91       	pop	r29
     540:	cf 91       	pop	r28
     542:	08 95       	ret

00000544 <__cxa_pure_virtual>:
/*
    This is applicable if using pure virtual inheritance.
*/
extern "C" void __cxa_pure_virtual(void); 
 
void __cxa_pure_virtual(void) {}; 
     544:	08 95       	ret

00000546 <_Znwj>:
void* operator new(size_t size);
void operator delete(void* size);
 
void * operator new(size_t size)
{
    return malloc(size);
     546:	ca c7       	rjmp	.+3988   	; 0x14dc <malloc>
}
     548:	08 95       	ret

0000054a <_ZN12_GLOBAL__N_16EEProm4taskEv>:
}

namespace EEPROM {
	
	void savePID(int p,int i,int d){eedata.p=p,eedata.i=i,eedata.d=d;
	save();
     54a:	fc 01       	movw	r30, r24
     54c:	f9 99       	sbic	0x1f, 1	; 31
     54e:	16 c0       	rjmp	.+44     	; 0x57c <_ZN12_GLOBAL__N_16EEProm4taskEv+0x32>
     550:	86 81       	ldd	r24, Z+6	; 0x06
     552:	88 23       	and	r24, r24
     554:	99 f0       	breq	.+38     	; 0x57c <_ZN12_GLOBAL__N_16EEProm4taskEv+0x32>
     556:	81 b5       	in	r24, 0x21	; 33
     558:	92 b5       	in	r25, 0x22	; 34
     55a:	01 96       	adiw	r24, 0x01	; 1
     55c:	92 bd       	out	0x22, r25	; 34
     55e:	81 bd       	out	0x21, r24	; 33
     560:	a4 81       	ldd	r26, Z+4	; 0x04
     562:	b5 81       	ldd	r27, Z+5	; 0x05
     564:	cd 01       	movw	r24, r26
     566:	01 96       	adiw	r24, 0x01	; 1
     568:	95 83       	std	Z+5, r25	; 0x05
     56a:	84 83       	std	Z+4, r24	; 0x04
     56c:	8c 91       	ld	r24, X
     56e:	80 bd       	out	0x20, r24	; 32
     570:	fa 9a       	sbi	0x1f, 2	; 31
     572:	f9 9a       	sbi	0x1f, 1	; 31
     574:	86 81       	ldd	r24, Z+6	; 0x06
     576:	81 50       	subi	r24, 0x01	; 1
     578:	86 83       	std	Z+6, r24	; 0x06
     57a:	fb 9a       	sbi	0x1f, 3	; 31
     57c:	08 95       	ret

0000057e <__vector_25>:
     57e:	1f 92       	push	r1
     580:	0f 92       	push	r0
     582:	0f b6       	in	r0, 0x3f	; 63
     584:	0f 92       	push	r0
     586:	11 24       	eor	r1, r1
     588:	0b b6       	in	r0, 0x3b	; 59
     58a:	0f 92       	push	r0
     58c:	2f 93       	push	r18
     58e:	3f 93       	push	r19
     590:	4f 93       	push	r20
     592:	5f 93       	push	r21
     594:	6f 93       	push	r22
     596:	7f 93       	push	r23
     598:	8f 93       	push	r24
     59a:	9f 93       	push	r25
     59c:	af 93       	push	r26
     59e:	bf 93       	push	r27
     5a0:	ef 93       	push	r30
     5a2:	ff 93       	push	r31
     5a4:	fb 98       	cbi	0x1f, 3	; 31
     5a6:	80 ec       	ldi	r24, 0xC0	; 192
     5a8:	91 e0       	ldi	r25, 0x01	; 1
     5aa:	1c d7       	rcall	.+3640   	; 0x13e4 <_Z9isrAppendR4Task>
     5ac:	ff 91       	pop	r31
     5ae:	ef 91       	pop	r30
     5b0:	bf 91       	pop	r27
     5b2:	af 91       	pop	r26
     5b4:	9f 91       	pop	r25
     5b6:	8f 91       	pop	r24
     5b8:	7f 91       	pop	r23
     5ba:	6f 91       	pop	r22
     5bc:	5f 91       	pop	r21
     5be:	4f 91       	pop	r20
     5c0:	3f 91       	pop	r19
     5c2:	2f 91       	pop	r18
     5c4:	0f 90       	pop	r0
     5c6:	0b be       	out	0x3b, r0	; 59
     5c8:	0f 90       	pop	r0
     5ca:	0f be       	out	0x3f, r0	; 63
     5cc:	0f 90       	pop	r0
     5ce:	1f 90       	pop	r1
     5d0:	18 95       	reti

000005d2 <_ZN6EEPROM8getServoEv>:
     5d2:	8d ec       	ldi	r24, 0xCD	; 205
     5d4:	91 e0       	ldi	r25, 0x01	; 1
     5d6:	08 95       	ret

000005d8 <_ZN6EEPROM6retoreEv>:
     5d8:	f9 99       	sbic	0x1f, 1	; 31
     5da:	22 c0       	rjmp	.+68     	; 0x620 <_ZN6EEPROM6retoreEv+0x48>
     5dc:	e0 ec       	ldi	r30, 0xC0	; 192
     5de:	f1 e0       	ldi	r31, 0x01	; 1
     5e0:	87 ec       	ldi	r24, 0xC7	; 199
     5e2:	91 e0       	ldi	r25, 0x01	; 1
     5e4:	95 83       	std	Z+5, r25	; 0x05
     5e6:	84 83       	std	Z+4, r24	; 0x04
     5e8:	8f ef       	ldi	r24, 0xFF	; 255
     5ea:	9f e0       	ldi	r25, 0x0F	; 15
     5ec:	92 bd       	out	0x22, r25	; 34
     5ee:	81 bd       	out	0x21, r24	; 33
     5f0:	8d e0       	ldi	r24, 0x0D	; 13
     5f2:	86 83       	std	Z+6, r24	; 0x06
     5f4:	81 b5       	in	r24, 0x21	; 33
     5f6:	92 b5       	in	r25, 0x22	; 34
     5f8:	01 96       	adiw	r24, 0x01	; 1
     5fa:	92 bd       	out	0x22, r25	; 34
     5fc:	81 bd       	out	0x21, r24	; 33
     5fe:	f8 9a       	sbi	0x1f, 0	; 31
     600:	a4 81       	ldd	r26, Z+4	; 0x04
     602:	b5 81       	ldd	r27, Z+5	; 0x05
     604:	cd 01       	movw	r24, r26
     606:	01 96       	adiw	r24, 0x01	; 1
     608:	95 83       	std	Z+5, r25	; 0x05
     60a:	84 83       	std	Z+4, r24	; 0x04
     60c:	80 b5       	in	r24, 0x20	; 32
     60e:	8c 93       	st	X, r24
     610:	86 81       	ldd	r24, Z+6	; 0x06
     612:	9f ef       	ldi	r25, 0xFF	; 255
     614:	98 0f       	add	r25, r24
     616:	96 83       	std	Z+6, r25	; 0x06
     618:	81 11       	cpse	r24, r1
     61a:	ec cf       	rjmp	.-40     	; 0x5f4 <_ZN6EEPROM6retoreEv+0x1c>
     61c:	81 e0       	ldi	r24, 0x01	; 1
     61e:	08 95       	ret
     620:	80 e0       	ldi	r24, 0x00	; 0
     622:	08 95       	ret

00000624 <_ZN6EEPROM4saveEv>:
     624:	f9 99       	sbic	0x1f, 1	; 31
     626:	10 c0       	rjmp	.+32     	; 0x648 <_ZN6EEPROM4saveEv+0x24>
     628:	e0 ec       	ldi	r30, 0xC0	; 192
     62a:	f1 e0       	ldi	r31, 0x01	; 1
     62c:	87 ec       	ldi	r24, 0xC7	; 199
     62e:	91 e0       	ldi	r25, 0x01	; 1
     630:	95 83       	std	Z+5, r25	; 0x05
     632:	84 83       	std	Z+4, r24	; 0x04
     634:	8e e0       	ldi	r24, 0x0E	; 14
     636:	86 83       	std	Z+6, r24	; 0x06
     638:	8f ef       	ldi	r24, 0xFF	; 255
     63a:	9f e0       	ldi	r25, 0x0F	; 15
     63c:	92 bd       	out	0x22, r25	; 34
     63e:	81 bd       	out	0x21, r24	; 33
     640:	cf 01       	movw	r24, r30
     642:	fd d6       	rcall	.+3578   	; 0x143e <_Z9kerAppendR4Task>
     644:	81 e0       	ldi	r24, 0x01	; 1
     646:	08 95       	ret
     648:	80 e0       	ldi	r24, 0x00	; 0
     64a:	08 95       	ret

0000064c <_GLOBAL__sub_I_eedata>:
     64c:	82 ec       	ldi	r24, 0xC2	; 194
     64e:	91 e0       	ldi	r25, 0x01	; 1
     650:	21 d6       	rcall	.+3138   	; 0x1294 <_ZN7ElementC1Ev>


namespace{
	class EEProm : public Task{
	public:
		EEProm(){restore();}
     652:	86 e2       	ldi	r24, 0x26	; 38
     654:	91 e0       	ldi	r25, 0x01	; 1
     656:	90 93 c1 01 	sts	0x01C1, r25
     65a:	80 93 c0 01 	sts	0x01C0, r24
			kerAppend(*this);
			return true;
		}	
		bool restore(){
			
			if(EECR&_BV(EEPE))
     65e:	f9 99       	sbic	0x1f, 1	; 31
     660:	20 c0       	rjmp	.+64     	; 0x6a2 <_GLOBAL__sub_I_eedata+0x56>
			return false;
			ptr=(char*)&eedata;
     662:	e0 ec       	ldi	r30, 0xC0	; 192
     664:	f1 e0       	ldi	r31, 0x01	; 1
     666:	87 ec       	ldi	r24, 0xC7	; 199
     668:	91 e0       	ldi	r25, 0x01	; 1
     66a:	95 83       	std	Z+5, r25	; 0x05
     66c:	84 83       	std	Z+4, r24	; 0x04
			count=sizeof(eedata);
			EEAR=0xfff;
     66e:	8f ef       	ldi	r24, 0xFF	; 255
     670:	9f e0       	ldi	r25, 0x0F	; 15
     672:	92 bd       	out	0x22, r25	; 34
     674:	81 bd       	out	0x21, r24	; 33
			while(count--){
     676:	8d e0       	ldi	r24, 0x0D	; 13
     678:	86 83       	std	Z+6, r24	; 0x06
				EEAR++;
     67a:	81 b5       	in	r24, 0x21	; 33
     67c:	92 b5       	in	r25, 0x22	; 34
     67e:	01 96       	adiw	r24, 0x01	; 1
     680:	92 bd       	out	0x22, r25	; 34
     682:	81 bd       	out	0x21, r24	; 33
				EECR|=_BV(EERE);
     684:	f8 9a       	sbi	0x1f, 0	; 31
				*ptr++=EEDR;
     686:	a4 81       	ldd	r26, Z+4	; 0x04
     688:	b5 81       	ldd	r27, Z+5	; 0x05
     68a:	cd 01       	movw	r24, r26
     68c:	01 96       	adiw	r24, 0x01	; 1
     68e:	95 83       	std	Z+5, r25	; 0x05
     690:	84 83       	std	Z+4, r24	; 0x04
     692:	80 b5       	in	r24, 0x20	; 32
     694:	8c 93       	st	X, r24
			if(EECR&_BV(EEPE))
			return false;
			ptr=(char*)&eedata;
			count=sizeof(eedata);
			EEAR=0xfff;
			while(count--){
     696:	86 81       	ldd	r24, Z+6	; 0x06
     698:	9f ef       	ldi	r25, 0xFF	; 255
     69a:	98 0f       	add	r25, r24
     69c:	96 83       	std	Z+6, r25	; 0x06
     69e:	81 11       	cpse	r24, r1
     6a0:	ec cf       	rjmp	.-40     	; 0x67a <_GLOBAL__sub_I_eedata+0x2e>
     6a2:	08 95       	ret

000006a4 <_ZN12_GLOBAL__N_13LCD4taskEv>:
		void print(unsigned char position, const char *s, unsigned char src) {
			if(lcd.print(position, s, src)) return;
			print_param.position = position;
			print_param.s = s;
			print_param.src = src;
			kerAppend(*this);
     6a4:	cf 93       	push	r28
     6a6:	df 93       	push	r29
     6a8:	fc 01       	movw	r30, r24
     6aa:	23 85       	ldd	r18, Z+11	; 0x0b
     6ac:	21 11       	cpse	r18, r1
     6ae:	02 c0       	rjmp	.+4      	; 0x6b4 <_ZN12_GLOBAL__N_13LCD4taskEv+0x10>
     6b0:	12 86       	std	Z+10, r1	; 0x0a
     6b2:	26 c0       	rjmp	.+76     	; 0x700 <_ZN12_GLOBAL__N_13LCD4taskEv+0x5c>
     6b4:	ec 01       	movw	r28, r24
     6b6:	80 e0       	ldi	r24, 0x00	; 0
     6b8:	db d1       	rcall	.+950    	; 0xa70 <_ZN2LL11lcdReadByteEh>
     6ba:	88 23       	and	r24, r24
     6bc:	f4 f0       	brlt	.+60     	; 0x6fa <_ZN12_GLOBAL__N_13LCD4taskEv+0x56>
     6be:	6c 85       	ldd	r22, Y+12	; 0x0c
     6c0:	62 30       	cpi	r22, 0x02	; 2
     6c2:	30 f0       	brcs	.+12     	; 0x6d0 <_ZN12_GLOBAL__N_13LCD4taskEv+0x2c>
     6c4:	60 e0       	ldi	r22, 0x00	; 0
     6c6:	8b 85       	ldd	r24, Y+11	; 0x0b
     6c8:	c5 d1       	rcall	.+906    	; 0xa54 <_ZN2LL12lcdWriteByteEhh>
     6ca:	81 e0       	ldi	r24, 0x01	; 1
     6cc:	8c 87       	std	Y+12, r24	; 0x0c
     6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <_ZN12_GLOBAL__N_13LCD4taskEv+0x30>
     6d0:	8b 85       	ldd	r24, Y+11	; 0x0b
     6d2:	c0 d1       	rcall	.+896    	; 0xa54 <_ZN2LL12lcdWriteByteEhh>
     6d4:	8d 85       	ldd	r24, Y+13	; 0x0d
     6d6:	81 30       	cpi	r24, 0x01	; 1
     6d8:	41 f4       	brne	.+16     	; 0x6ea <_ZN12_GLOBAL__N_13LCD4taskEv+0x46>
     6da:	ee 85       	ldd	r30, Y+14	; 0x0e
     6dc:	ff 85       	ldd	r31, Y+15	; 0x0f
     6de:	cf 01       	movw	r24, r30
     6e0:	01 96       	adiw	r24, 0x01	; 1
     6e2:	9f 87       	std	Y+15, r25	; 0x0f
     6e4:	8e 87       	std	Y+14, r24	; 0x0e
     6e6:	e0 81       	ld	r30, Z
     6e8:	07 c0       	rjmp	.+14     	; 0x6f8 <_ZN12_GLOBAL__N_13LCD4taskEv+0x54>
     6ea:	ee 85       	ldd	r30, Y+14	; 0x0e
     6ec:	ff 85       	ldd	r31, Y+15	; 0x0f
     6ee:	cf 01       	movw	r24, r30
     6f0:	01 96       	adiw	r24, 0x01	; 1
     6f2:	9f 87       	std	Y+15, r25	; 0x0f
     6f4:	8e 87       	std	Y+14, r24	; 0x0e
     6f6:	e4 91       	lpm	r30, Z
     6f8:	eb 87       	std	Y+11, r30	; 0x0b
     6fa:	ce 01       	movw	r24, r28
     6fc:	06 96       	adiw	r24, 0x06	; 6
     6fe:	9f d6       	rcall	.+3390   	; 0x143e <_Z9kerAppendR4Task>
     700:	df 91       	pop	r29
     702:	cf 91       	pop	r28
     704:	08 95       	ret

00000706 <_ZN12_GLOBAL__N_13LCD7timeoutEv>:
     706:	cf 93       	push	r28
     708:	df 93       	push	r29
     70a:	ec 01       	movw	r28, r24
     70c:	8a 85       	ldd	r24, Y+10	; 0x0a
     70e:	87 30       	cpi	r24, 0x07	; 7
     710:	51 f4       	brne	.+20     	; 0x726 <_ZN12_GLOBAL__N_13LCD7timeoutEv+0x20>
     712:	82 e0       	ldi	r24, 0x02	; 2
     714:	8a 87       	std	Y+10, r24	; 0x0a
     716:	82 e0       	ldi	r24, 0x02	; 2
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	9d 83       	std	Y+5, r25	; 0x05
     71c:	8c 83       	std	Y+4, r24	; 0x04
     71e:	60 e0       	ldi	r22, 0x00	; 0
     720:	80 e3       	ldi	r24, 0x30	; 48
     722:	98 d1       	rcall	.+816    	; 0xa54 <_ZN2LL12lcdWriteByteEhh>
     724:	3f c0       	rjmp	.+126    	; 0x7a4 <_ZN12_GLOBAL__N_13LCD7timeoutEv+0x9e>
     726:	ce 01       	movw	r24, r28
     728:	30 d3       	rcall	.+1632   	; 0xd8a <_ZN5timer6removeER5Timer>
     72a:	60 e0       	ldi	r22, 0x00	; 0
     72c:	80 e3       	ldi	r24, 0x30	; 48
     72e:	87 d1       	rcall	.+782    	; 0xa3e <_ZN2LL14lcdWriteNibbleEhh>
     730:	88 e7       	ldi	r24, 0x78	; 120
     732:	74 d1       	rcall	.+744    	; 0xa1c <_Z6delayUh>
     734:	60 e0       	ldi	r22, 0x00	; 0
     736:	80 e3       	ldi	r24, 0x30	; 48
     738:	82 d1       	rcall	.+772    	; 0xa3e <_ZN2LL14lcdWriteNibbleEhh>
     73a:	82 e3       	ldi	r24, 0x32	; 50
     73c:	6f d1       	rcall	.+734    	; 0xa1c <_Z6delayUh>
     73e:	60 e0       	ldi	r22, 0x00	; 0
     740:	80 e2       	ldi	r24, 0x20	; 32
     742:	7d d1       	rcall	.+762    	; 0xa3e <_ZN2LL14lcdWriteNibbleEhh>
     744:	82 e3       	ldi	r24, 0x32	; 50
     746:	6a d1       	rcall	.+724    	; 0xa1c <_Z6delayUh>
     748:	60 e0       	ldi	r22, 0x00	; 0
     74a:	88 e2       	ldi	r24, 0x28	; 40
     74c:	83 d1       	rcall	.+774    	; 0xa54 <_ZN2LL12lcdWriteByteEhh>
     74e:	82 e3       	ldi	r24, 0x32	; 50
     750:	65 d1       	rcall	.+714    	; 0xa1c <_Z6delayUh>
     752:	60 e0       	ldi	r22, 0x00	; 0
     754:	80 e4       	ldi	r24, 0x40	; 64
     756:	7e d1       	rcall	.+764    	; 0xa54 <_ZN2LL12lcdWriteByteEhh>
     758:	82 e3       	ldi	r24, 0x32	; 50
     75a:	60 d1       	rcall	.+704    	; 0xa1c <_Z6delayUh>
     75c:	61 e0       	ldi	r22, 0x01	; 1
     75e:	85 ea       	ldi	r24, 0xA5	; 165
     760:	79 d1       	rcall	.+754    	; 0xa54 <_ZN2LL12lcdWriteByteEhh>
     762:	82 e3       	ldi	r24, 0x32	; 50
     764:	5b d1       	rcall	.+694    	; 0xa1c <_Z6delayUh>
     766:	60 e0       	ldi	r22, 0x00	; 0
     768:	80 e4       	ldi	r24, 0x40	; 64
     76a:	74 d1       	rcall	.+744    	; 0xa54 <_ZN2LL12lcdWriteByteEhh>
     76c:	82 e3       	ldi	r24, 0x32	; 50
     76e:	56 d1       	rcall	.+684    	; 0xa1c <_Z6delayUh>
     770:	81 e0       	ldi	r24, 0x01	; 1
     772:	7e d1       	rcall	.+764    	; 0xa70 <_ZN2LL11lcdReadByteEh>
     774:	91 e0       	ldi	r25, 0x01	; 1
     776:	85 3a       	cpi	r24, 0xA5	; 165
     778:	09 f4       	brne	.+2      	; 0x77c <_ZN12_GLOBAL__N_13LCD7timeoutEv+0x76>
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	99 23       	and	r25, r25
     77e:	11 f0       	breq	.+4      	; 0x784 <_ZN12_GLOBAL__N_13LCD7timeoutEv+0x7e>
     780:	9a 87       	std	Y+10, r25	; 0x0a
     782:	10 c0       	rjmp	.+32     	; 0x7a4 <_ZN12_GLOBAL__N_13LCD7timeoutEv+0x9e>
     784:	82 e0       	ldi	r24, 0x02	; 2
     786:	8a 87       	std	Y+10, r24	; 0x0a
     788:	8e ef       	ldi	r24, 0xFE	; 254
     78a:	8d 87       	std	Y+13, r24	; 0x0d
     78c:	1c 86       	std	Y+12, r1	; 0x0c
     78e:	8d e8       	ldi	r24, 0x8D	; 141
     790:	90 e0       	ldi	r25, 0x00	; 0
     792:	9f 87       	std	Y+15, r25	; 0x0f
     794:	8e 87       	std	Y+14, r24	; 0x0e
     796:	ec e8       	ldi	r30, 0x8C	; 140
     798:	f0 e0       	ldi	r31, 0x00	; 0
     79a:	e4 91       	lpm	r30, Z
     79c:	eb 87       	std	Y+11, r30	; 0x0b
     79e:	ce 01       	movw	r24, r28
     7a0:	06 96       	adiw	r24, 0x06	; 6
     7a2:	4d d6       	rcall	.+3226   	; 0x143e <_Z9kerAppendR4Task>
     7a4:	df 91       	pop	r29
     7a6:	cf 91       	pop	r28
     7a8:	08 95       	ret

000007aa <_ZN3LCD3._54taskEv>:
     7aa:	dc 01       	movw	r26, r24
     7ac:	17 96       	adiw	r26, 0x07	; 7
     7ae:	2c 91       	ld	r18, X
     7b0:	17 97       	sbiw	r26, 0x07	; 7
     7b2:	15 96       	adiw	r26, 0x05	; 5
     7b4:	ed 91       	ld	r30, X+
     7b6:	fc 91       	ld	r31, X
     7b8:	16 97       	sbiw	r26, 0x06	; 6
     7ba:	14 96       	adiw	r26, 0x04	; 4
     7bc:	8c 91       	ld	r24, X
     7be:	14 97       	sbiw	r26, 0x04	; 4
     7c0:	90 91 e7 01 	lds	r25, 0x01E7
     7c4:	91 11       	cpse	r25, r1
     7c6:	2c c0       	rjmp	.+88     	; 0x820 <_ZN3LCD3._54taskEv+0x76>
     7c8:	ad ed       	ldi	r26, 0xDD	; 221
     7ca:	b1 e0       	ldi	r27, 0x01	; 1
     7cc:	92 e0       	ldi	r25, 0x02	; 2
     7ce:	1a 96       	adiw	r26, 0x0a	; 10
     7d0:	9c 93       	st	X, r25
     7d2:	1a 97       	sbiw	r26, 0x0a	; 10
     7d4:	1d 96       	adiw	r26, 0x0d	; 13
     7d6:	2c 93       	st	X, r18
     7d8:	1d 97       	sbiw	r26, 0x0d	; 13
     7da:	1f 96       	adiw	r26, 0x0f	; 15
     7dc:	fc 93       	st	X, r31
     7de:	ee 93       	st	-X, r30
     7e0:	1e 97       	sbiw	r26, 0x0e	; 14
     7e2:	98 2f       	mov	r25, r24
     7e4:	90 95       	com	r25
     7e6:	1c 96       	adiw	r26, 0x0c	; 12
     7e8:	9c 93       	st	X, r25
     7ea:	92 30       	cpi	r25, 0x02	; 2
     7ec:	10 f0       	brcs	.+4      	; 0x7f2 <_ZN3LCD3._54taskEv+0x48>
     7ee:	80 68       	ori	r24, 0x80	; 128
     7f0:	11 c0       	rjmp	.+34     	; 0x814 <_ZN3LCD3._54taskEv+0x6a>
     7f2:	21 30       	cpi	r18, 0x01	; 1
     7f4:	41 f4       	brne	.+16     	; 0x806 <_ZN3LCD3._54taskEv+0x5c>
     7f6:	cf 01       	movw	r24, r30
     7f8:	01 96       	adiw	r24, 0x01	; 1
     7fa:	90 93 ec 01 	sts	0x01EC, r25
     7fe:	80 93 eb 01 	sts	0x01EB, r24
     802:	80 81       	ld	r24, Z
     804:	07 c0       	rjmp	.+14     	; 0x814 <_ZN3LCD3._54taskEv+0x6a>
     806:	cf 01       	movw	r24, r30
     808:	01 96       	adiw	r24, 0x01	; 1
     80a:	90 93 ec 01 	sts	0x01EC, r25
     80e:	80 93 eb 01 	sts	0x01EB, r24
     812:	84 91       	lpm	r24, Z
     814:	80 93 e8 01 	sts	0x01E8, r24
     818:	83 ee       	ldi	r24, 0xE3	; 227
     81a:	91 e0       	ldi	r25, 0x01	; 1
     81c:	10 c6       	rjmp	.+3104   	; 0x143e <_Z9kerAppendR4Task>
     81e:	08 95       	ret
     820:	cd 01       	movw	r24, r26
     822:	0d c6       	rjmp	.+3098   	; 0x143e <_Z9kerAppendR4Task>
     824:	08 95       	ret

00000826 <_ZThn6_N12_GLOBAL__N_13LCD4taskEv>:
     826:	0f 93       	push	r16
     828:	1f 93       	push	r17
     82a:	cf 93       	push	r28
     82c:	df 93       	push	r29
     82e:	fc 01       	movw	r30, r24
     830:	25 81       	ldd	r18, Z+5	; 0x05
     832:	21 11       	cpse	r18, r1
     834:	02 c0       	rjmp	.+4      	; 0x83a <_ZThn6_N12_GLOBAL__N_13LCD4taskEv+0x14>
     836:	14 82       	std	Z+4, r1	; 0x04
     838:	36 c0       	rjmp	.+108    	; 0x8a6 <_ZThn6_N12_GLOBAL__N_13LCD4taskEv+0x80>
     83a:	ec 01       	movw	r28, r24
     83c:	80 e0       	ldi	r24, 0x00	; 0
     83e:	18 d1       	rcall	.+560    	; 0xa70 <_ZN2LL11lcdReadByteEh>
     840:	88 23       	and	r24, r24
     842:	7c f1       	brlt	.+94     	; 0x8a2 <_ZThn6_N12_GLOBAL__N_13LCD4taskEv+0x7c>
     844:	6e 81       	ldd	r22, Y+6	; 0x06
     846:	62 30       	cpi	r22, 0x02	; 2
     848:	58 f0       	brcs	.+22     	; 0x860 <_ZThn6_N12_GLOBAL__N_13LCD4taskEv+0x3a>
     84a:	60 e0       	ldi	r22, 0x00	; 0
     84c:	8e 01       	movw	r16, r28
     84e:	06 50       	subi	r16, 0x06	; 6
     850:	11 09       	sbc	r17, r1
     852:	f8 01       	movw	r30, r16
     854:	83 85       	ldd	r24, Z+11	; 0x0b
     856:	fe d0       	rcall	.+508    	; 0xa54 <_ZN2LL12lcdWriteByteEhh>
     858:	81 e0       	ldi	r24, 0x01	; 1
     85a:	f8 01       	movw	r30, r16
     85c:	84 87       	std	Z+12, r24	; 0x0c
     85e:	02 c0       	rjmp	.+4      	; 0x864 <_ZThn6_N12_GLOBAL__N_13LCD4taskEv+0x3e>
     860:	8d 81       	ldd	r24, Y+5	; 0x05
     862:	f8 d0       	rcall	.+496    	; 0xa54 <_ZN2LL12lcdWriteByteEhh>
     864:	8f 81       	ldd	r24, Y+7	; 0x07
     866:	81 30       	cpi	r24, 0x01	; 1
     868:	71 f4       	brne	.+28     	; 0x886 <_ZThn6_N12_GLOBAL__N_13LCD4taskEv+0x60>
     86a:	de 01       	movw	r26, r28
     86c:	16 97       	sbiw	r26, 0x06	; 6
     86e:	1e 96       	adiw	r26, 0x0e	; 14
     870:	ed 91       	ld	r30, X+
     872:	fc 91       	ld	r31, X
     874:	1f 97       	sbiw	r26, 0x0f	; 15
     876:	cf 01       	movw	r24, r30
     878:	01 96       	adiw	r24, 0x01	; 1
     87a:	1f 96       	adiw	r26, 0x0f	; 15
     87c:	9c 93       	st	X, r25
     87e:	8e 93       	st	-X, r24
     880:	1e 97       	sbiw	r26, 0x0e	; 14
     882:	e0 81       	ld	r30, Z
     884:	0d c0       	rjmp	.+26     	; 0x8a0 <_ZThn6_N12_GLOBAL__N_13LCD4taskEv+0x7a>
     886:	de 01       	movw	r26, r28
     888:	16 97       	sbiw	r26, 0x06	; 6
     88a:	1e 96       	adiw	r26, 0x0e	; 14
     88c:	ed 91       	ld	r30, X+
     88e:	fc 91       	ld	r31, X
     890:	1f 97       	sbiw	r26, 0x0f	; 15
     892:	cf 01       	movw	r24, r30
     894:	01 96       	adiw	r24, 0x01	; 1
     896:	1f 96       	adiw	r26, 0x0f	; 15
     898:	9c 93       	st	X, r25
     89a:	8e 93       	st	-X, r24
     89c:	1e 97       	sbiw	r26, 0x0e	; 14
     89e:	e4 91       	lpm	r30, Z
     8a0:	ed 83       	std	Y+5, r30	; 0x05
     8a2:	ce 01       	movw	r24, r28
     8a4:	cc d5       	rcall	.+2968   	; 0x143e <_Z9kerAppendR4Task>
     8a6:	df 91       	pop	r29
     8a8:	cf 91       	pop	r28
     8aa:	1f 91       	pop	r17
     8ac:	0f 91       	pop	r16
     8ae:	08 95       	ret

000008b0 <_ZN3LCD5printEhPc>:
        LCD(void) {
            count = state = POWER_UP_DELAY;	//power up delay > 15 ms
            timer::add(*this);		//timer3 has to be already instantiated
        }
        bool print(unsigned char position, const char *s, unsigned char src) {
			if (state != READY) return false;
     8b0:	90 91 e7 01 	lds	r25, 0x01E7
     8b4:	91 11       	cpse	r25, r1
     8b6:	1d c0       	rjmp	.+58     	; 0x8f2 <_ZN3LCD5printEhPc+0x42>
			state = PRINTING;
     8b8:	ed ed       	ldi	r30, 0xDD	; 221
     8ba:	f1 e0       	ldi	r31, 0x01	; 1
     8bc:	92 e0       	ldi	r25, 0x02	; 2
     8be:	92 87       	std	Z+10, r25	; 0x0a
			source = src;
     8c0:	91 e0       	ldi	r25, 0x01	; 1
     8c2:	95 87       	std	Z+13, r25	; 0x0d
			flash = s;
     8c4:	77 87       	std	Z+15, r23	; 0x0f
     8c6:	66 87       	std	Z+14, r22	; 0x0e
			location = ~position;
     8c8:	98 2f       	mov	r25, r24
     8ca:	90 95       	com	r25
     8cc:	94 87       	std	Z+12, r25	; 0x0c
			character = location > RAM ? position|128 : readbyte(); //pgm_read_byte(str++);
     8ce:	92 30       	cpi	r25, 0x02	; 2
     8d0:	10 f0       	brcs	.+4      	; 0x8d6 <_ZN3LCD5printEhPc+0x26>
     8d2:	80 68       	ori	r24, 0x80	; 128
     8d4:	08 c0       	rjmp	.+16     	; 0x8e6 <_ZN3LCD5printEhPc+0x36>
    private:
        unsigned char state, character, location, source;
		union {const char *flash; char *ram;};

		char readbyte(void){
			return source == RAM ? *ram++ : pgm_read_byte(flash++);
     8d6:	cb 01       	movw	r24, r22
     8d8:	01 96       	adiw	r24, 0x01	; 1
     8da:	90 93 ec 01 	sts	0x01EC, r25
     8de:	80 93 eb 01 	sts	0x01EB, r24
     8e2:	fb 01       	movw	r30, r22
     8e4:	80 81       	ld	r24, Z
			if (state != READY) return false;
			state = PRINTING;
			source = src;
			flash = s;
			location = ~position;
			character = location > RAM ? position|128 : readbyte(); //pgm_read_byte(str++);
     8e6:	80 93 e8 01 	sts	0x01E8, r24
			kerAppend(*this);
     8ea:	83 ee       	ldi	r24, 0xE3	; 227
     8ec:	91 e0       	ldi	r25, 0x01	; 1
     8ee:	a7 c5       	rjmp	.+2894   	; 0x143e <_Z9kerAppendR4Task>
     8f0:	08 95       	ret
namespace LCD {
	static class : public Task {
	public:
		void print(unsigned char position, const char *s, unsigned char src) {
			if(lcd.print(position, s, src)) return;
			print_param.position = position;
     8f2:	e5 ed       	ldi	r30, 0xD5	; 213
     8f4:	f1 e0       	ldi	r31, 0x01	; 1
     8f6:	84 83       	std	Z+4, r24	; 0x04
			print_param.s = s;
     8f8:	76 83       	std	Z+6, r23	; 0x06
     8fa:	65 83       	std	Z+5, r22	; 0x05
			print_param.src = src;
     8fc:	81 e0       	ldi	r24, 0x01	; 1
     8fe:	87 83       	std	Z+7, r24	; 0x07
			kerAppend(*this);
     900:	cf 01       	movw	r24, r30
     902:	9d c5       	rjmp	.+2874   	; 0x143e <_Z9kerAppendR4Task>
     904:	08 95       	ret

00000906 <_GLOBAL__sub_I__ZN3LCD5printEhPKc>:
	void print(unsigned char position, char *s){
		printTask.print(position, (const char *)s, RAM);
		//usrCall(printTask);
	}

     906:	cf 93       	push	r28
     908:	df 93       	push	r29
     90a:	8f ed       	ldi	r24, 0xDF	; 223
     90c:	91 e0       	ldi	r25, 0x01	; 1
     90e:	c2 d4       	rcall	.+2436   	; 0x1294 <_ZN7ElementC1Ev>
     910:	cd ed       	ldi	r28, 0xDD	; 221
     912:	d1 e0       	ldi	r29, 0x01	; 1
     914:	8c e0       	ldi	r24, 0x0C	; 12
     916:	91 e0       	ldi	r25, 0x01	; 1
     918:	99 83       	std	Y+1, r25	; 0x01
     91a:	88 83       	st	Y, r24
     91c:	85 ee       	ldi	r24, 0xE5	; 229
     91e:	91 e0       	ldi	r25, 0x01	; 1
     920:	b9 d4       	rcall	.+2418   	; 0x1294 <_ZN7ElementC1Ev>
    enum {STATUS=0, RAM=1, BUSY=128};
    enum {POWER_UP_DELAY=7, INTERFACE_SET_DELAY=2, READY=0, NO_LCDM, PRINTING};

    class LCD : Timer, public Task {
    public:
        LCD(void) {
     922:	8c e2       	ldi	r24, 0x2C	; 44
     924:	91 e0       	ldi	r25, 0x01	; 1
     926:	99 83       	std	Y+1, r25	; 0x01
     928:	88 83       	st	Y, r24
     92a:	84 e3       	ldi	r24, 0x34	; 52
     92c:	91 e0       	ldi	r25, 0x01	; 1
     92e:	9f 83       	std	Y+7, r25	; 0x07
     930:	8e 83       	std	Y+6, r24	; 0x06
            count = state = POWER_UP_DELAY;	//power up delay > 15 ms
     932:	87 e0       	ldi	r24, 0x07	; 7
     934:	8a 87       	std	Y+10, r24	; 0x0a
     936:	87 e0       	ldi	r24, 0x07	; 7
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	9d 83       	std	Y+5, r25	; 0x05
     93c:	8c 83       	std	Y+4, r24	; 0x04
            timer::add(*this);		//timer3 has to be already instantiated
     93e:	ce 01       	movw	r24, r28
     940:	1d d2       	rcall	.+1082   	; 0xd7c <_ZN5timer3addER5Timer>
     942:	87 ed       	ldi	r24, 0xD7	; 215
     944:	91 e0       	ldi	r25, 0x01	; 1
     946:	a6 d4       	rcall	.+2380   	; 0x1294 <_ZN7ElementC1Ev>
    } lcd;

}

namespace LCD {
	static class : public Task {
     948:	8a e3       	ldi	r24, 0x3A	; 58
     94a:	91 e0       	ldi	r25, 0x01	; 1
     94c:	90 93 d6 01 	sts	0x01D6, r25
     950:	80 93 d5 01 	sts	0x01D5, r24
	void print(unsigned char position, char *s){
		printTask.print(position, (const char *)s, RAM);
		//usrCall(printTask);
	}

     954:	df 91       	pop	r29
     956:	cf 91       	pop	r28
     958:	08 95       	ret

0000095a <_Z12displacementc>:
	// 11111111
};

int displacement(char b){
	static int last = 8;
	if (!b) return last;
     95a:	81 11       	cpse	r24, r1
     95c:	05 c0       	rjmp	.+10     	; 0x968 <_Z12displacementc+0xe>
     95e:	80 91 06 01 	lds	r24, 0x0106
     962:	90 91 07 01 	lds	r25, 0x0107
     966:	08 95       	ret
	unsigned char c = pgm_read_byte(&table[(unsigned char)b>>1]);
     968:	e8 2f       	mov	r30, r24
     96a:	f0 e0       	ldi	r31, 0x00	; 0
     96c:	f5 95       	asr	r31
     96e:	e7 95       	ror	r30
     970:	ef 56       	subi	r30, 0x6F	; 111
     972:	ff 4f       	sbci	r31, 0xFF	; 255
     974:	e4 91       	lpm	r30, Z
	return last = b & 1 ? c >> 4 : c & 15;
     976:	80 ff       	sbrs	r24, 0
     978:	0b c0       	rjmp	.+22     	; 0x990 <_Z12displacementc+0x36>
     97a:	8e 2f       	mov	r24, r30
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	95 95       	asr	r25
     980:	87 95       	ror	r24
     982:	95 95       	asr	r25
     984:	87 95       	ror	r24
     986:	95 95       	asr	r25
     988:	87 95       	ror	r24
     98a:	95 95       	asr	r25
     98c:	87 95       	ror	r24
     98e:	03 c0       	rjmp	.+6      	; 0x996 <_Z12displacementc+0x3c>
     990:	ef 70       	andi	r30, 0x0F	; 15
     992:	8e 2f       	mov	r24, r30
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	90 93 07 01 	sts	0x0107, r25
     99a:	80 93 06 01 	sts	0x0106, r24
}
     99e:	08 95       	ret

000009a0 <_ZN8maintask4taskEv>:
	Servo::set(Servo::OPEN,0);
	Servo::set(Servo::UP1,2);
	Servo::set(Servo::UP2,3);
	Servo::delay100ms(10);
	Servo::set(Servo::RIGHT,1);
	Servo::slowclose();
     9a0:	cf 93       	push	r28
     9a2:	df 93       	push	r29
     9a4:	fc 01       	movw	r30, r24
     9a6:	24 81       	ldd	r18, Z+4	; 0x04
     9a8:	21 11       	cpse	r18, r1
     9aa:	0d c0       	rjmp	.+26     	; 0x9c6 <_ZN8maintask4taskEv+0x26>
     9ac:	ec 01       	movw	r28, r24
     9ae:	94 d3       	rcall	.+1832   	; 0x10d8 <_ZN5Wheel9getSensorEv>
     9b0:	80 ff       	sbrs	r24, 0
     9b2:	05 c0       	rjmp	.+10     	; 0x9be <_ZN8maintask4taskEv+0x1e>
     9b4:	80 e0       	ldi	r24, 0x00	; 0
     9b6:	98 d3       	rcall	.+1840   	; 0x10e8 <_ZN5Wheel4moveENS_8_commandE>
     9b8:	81 e0       	ldi	r24, 0x01	; 1
     9ba:	8c 83       	std	Y+4, r24	; 0x04
     9bc:	04 c0       	rjmp	.+8      	; 0x9c6 <_ZN8maintask4taskEv+0x26>
     9be:	84 ea       	ldi	r24, 0xA4	; 164
     9c0:	93 d3       	rcall	.+1830   	; 0x10e8 <_ZN5Wheel4moveENS_8_commandE>
     9c2:	ce 01       	movw	r24, r28
     9c4:	3c d5       	rcall	.+2680   	; 0x143e <_Z9kerAppendR4Task>
     9c6:	df 91       	pop	r29
     9c8:	cf 91       	pop	r28
     9ca:	08 95       	ret

000009cc <main>:
		

	}
}usrTask,usrTask1;

int main(void) {
     9cc:	ff cf       	rjmp	.-2      	; 0x9cc <main>

000009ce <_GLOBAL__sub_I__Z4testv>:
	while(1) {
		

		
	}
}
     9ce:	cf 93       	push	r28
     9d0:	df 93       	push	r29
     9d2:	84 ef       	ldi	r24, 0xF4	; 244
     9d4:	91 e0       	ldi	r25, 0x01	; 1
     9d6:	5e d4       	rcall	.+2236   	; 0x1294 <_ZN7ElementC1Ev>
}


static class maintask : public Task{
	public:
	maintask(void){
     9d8:	e2 ef       	ldi	r30, 0xF2	; 242
     9da:	f1 e0       	ldi	r31, 0x01	; 1
     9dc:	c0 e4       	ldi	r28, 0x40	; 64
     9de:	d1 e0       	ldi	r29, 0x01	; 1
     9e0:	d1 83       	std	Z+1, r29	; 0x01
     9e2:	c0 83       	st	Z, r28
		stop=false;
     9e4:	14 82       	std	Z+4, r1	; 0x04
     9e6:	8f ee       	ldi	r24, 0xEF	; 239
     9e8:	91 e0       	ldi	r25, 0x01	; 1
     9ea:	54 d4       	rcall	.+2216   	; 0x1294 <_ZN7ElementC1Ev>
}


static class maintask : public Task{
	public:
	maintask(void){
     9ec:	ed ee       	ldi	r30, 0xED	; 237
     9ee:	f1 e0       	ldi	r31, 0x01	; 1
     9f0:	d1 83       	std	Z+1, r29	; 0x01
     9f2:	c0 83       	st	Z, r28
		stop=false;
     9f4:	14 82       	std	Z+4, r1	; 0x04
	while(1) {
		

		
	}
}
     9f6:	df 91       	pop	r29
     9f8:	cf 91       	pop	r28
     9fa:	08 95       	ret

000009fc <_ZN12_GLOBAL__N_13SPIEc>:
namespace {

    char u4, u5;

    char SPI(char c) {
        while (!(UCSR1A & _BV(UDRE1)));		// wait for empty transmit buffer
     9fc:	e8 ec       	ldi	r30, 0xC8	; 200
     9fe:	f0 e0       	ldi	r31, 0x00	; 0
     a00:	90 81       	ld	r25, Z
     a02:	95 ff       	sbrs	r25, 5
     a04:	fd cf       	rjmp	.-6      	; 0xa00 <_ZN12_GLOBAL__N_13SPIEc+0x4>
        UDR1 = c;
     a06:	80 93 ce 00 	sts	0x00CE, r24
        while (!(UCSR1A & _BV(RXC1)));		// wait for data to be received
     a0a:	e8 ec       	ldi	r30, 0xC8	; 200
     a0c:	f0 e0       	ldi	r31, 0x00	; 0
     a0e:	80 81       	ld	r24, Z
     a10:	88 23       	and	r24, r24
     a12:	ec f7       	brge	.-6      	; 0xa0e <_ZN12_GLOBAL__N_13SPIEc+0x12>
        return UDR1;							// dummy read
     a14:	80 91 ce 00 	lds	r24, 0x00CE
    }
     a18:	08 95       	ret

00000a1a <_Z5delayv>:
#include <avr/io.h>

#include "robocar_ll.h"

void __attribute__((noinline, naked)) delay(void) {
    __asm__("ret"::);
     a1a:	08 95       	ret

00000a1c <_Z6delayUh>:
}
//8 clk = 723 ns (11.0592 MHz)

void delayU(unsigned char t) {
     a1c:	cf 93       	push	r28
    while (t--) {
     a1e:	88 23       	and	r24, r24
     a20:	21 f0       	breq	.+8      	; 0xa2a <_Z6delayUh+0xe>
     a22:	c8 2f       	mov	r28, r24
        delay();
     a24:	fa df       	rcall	.-12     	; 0xa1a <_Z5delayv>
     a26:	c1 50       	subi	r28, 0x01	; 1
    __asm__("ret"::);
}
//8 clk = 723 ns (11.0592 MHz)

void delayU(unsigned char t) {
    while (t--) {
     a28:	e9 f7       	brne	.-6      	; 0xa24 <_Z6delayUh+0x8>
        delay();
    }
}
     a2a:	cf 91       	pop	r28
     a2c:	08 95       	ret

00000a2e <_Z6mirrorc>:
                         "1: lsr __tmp_reg__" "\n\t"\
                         "rol %0" "\n\t"\
                         "brcs 1b" "\n\t"\
                         :"=a" (c)\
                         :"0" (c)\
                        );
     a2e:	28 2f       	mov	r18, r24
     a30:	02 2e       	mov	r0, r18
     a32:	2e ef       	ldi	r18, 0xFE	; 254
     a34:	06 94       	lsr	r0
     a36:	22 1f       	adc	r18, r18
     a38:	e8 f3       	brcs	.-6      	; 0xa34 <_Z6mirrorc+0x6>
     a3a:	82 2f       	mov	r24, r18
    return c;
}
     a3c:	08 95       	ret

00000a3e <_ZN2LL14lcdWriteNibbleEhh>:

namespace LL {

    void lcdWriteNibble(unsigned char n, unsigned char c) {
        // require lower nibble of n = 0
        BGATEL();
     a3e:	2a 98       	cbi	0x05, 2	; 5
        BUS(BWRITE);
     a40:	9f ef       	ldi	r25, 0xFF	; 255
     a42:	97 b9       	out	0x07, r25	; 7
        BUSWRITE(n | c << 2);
     a44:	66 0f       	add	r22, r22
     a46:	66 0f       	add	r22, r22
     a48:	86 2b       	or	r24, r22
     a4a:	88 b9       	out	0x08, r24	; 8
        LCDSTROBE();
     a4c:	17 9a       	sbi	0x02, 7	; 2
     a4e:	e5 df       	rcall	.-54     	; 0xa1a <_Z5delayv>
     a50:	17 98       	cbi	0x02, 7	; 2
     a52:	08 95       	ret

00000a54 <_ZN2LL12lcdWriteByteEhh>:
    }

    void lcdWriteByte(unsigned char b, unsigned char c) {
     a54:	cf 93       	push	r28
     a56:	df 93       	push	r29
     a58:	c8 2f       	mov	r28, r24
     a5a:	d6 2f       	mov	r29, r22
        lcdWriteNibble(b & 0xf0, c);		// high nibble first
     a5c:	80 7f       	andi	r24, 0xF0	; 240
     a5e:	ef df       	rcall	.-34     	; 0xa3e <_ZN2LL14lcdWriteNibbleEhh>
        lcdWriteNibble(b << 4, c);
     a60:	6d 2f       	mov	r22, r29
     a62:	8c 2f       	mov	r24, r28
     a64:	82 95       	swap	r24
     a66:	80 7f       	andi	r24, 0xF0	; 240
     a68:	ea df       	rcall	.-44     	; 0xa3e <_ZN2LL14lcdWriteNibbleEhh>
    }
     a6a:	df 91       	pop	r29
     a6c:	cf 91       	pop	r28
     a6e:	08 95       	ret

00000a70 <_ZN2LL11lcdReadByteEh>:

    char lcdReadByte(unsigned char c) {
     a70:	cf 93       	push	r28
        unsigned char lownibble;
        BGATEL();
     a72:	2a 98       	cbi	0x05, 2	; 5
        BUS(BREAD);
     a74:	9f e0       	ldi	r25, 0x0F	; 15
     a76:	97 b9       	out	0x07, r25	; 7
        BUSWRITE((c | 2) << 2);
     a78:	82 60       	ori	r24, 0x02	; 2
     a7a:	88 0f       	add	r24, r24
     a7c:	88 0f       	add	r24, r24
     a7e:	88 b9       	out	0x08, r24	; 8
        LCDSTROBE();
     a80:	17 9a       	sbi	0x02, 7	; 2
     a82:	cb df       	rcall	.-106    	; 0xa1a <_Z5delayv>
     a84:	17 98       	cbi	0x02, 7	; 2
        BUSREAD(c);
     a86:	c6 b1       	in	r28, 0x06	; 6
        c &= 0xf0;	// high nibble first
        LCDSTROBE();
     a88:	17 9a       	sbi	0x02, 7	; 2
     a8a:	c7 df       	rcall	.-114    	; 0xa1a <_Z5delayv>
     a8c:	17 98       	cbi	0x02, 7	; 2
        BUSREAD(lownibble);
     a8e:	86 b1       	in	r24, 0x06	; 6
        return c | lownibble >> 4;
     a90:	82 95       	swap	r24
     a92:	8f 70       	andi	r24, 0x0F	; 15
        BGATEL();
        BUS(BREAD);
        BUSWRITE((c | 2) << 2);
        LCDSTROBE();
        BUSREAD(c);
        c &= 0xf0;	// high nibble first
     a94:	c0 7f       	andi	r28, 0xF0	; 240
        LCDSTROBE();
        BUSREAD(lownibble);
        return c | lownibble >> 4;
    }
     a96:	8c 2b       	or	r24, r28
     a98:	cf 91       	pop	r28
     a9a:	08 95       	ret

00000a9c <_ZN2LL7read541ENS_5HC541Eh>:

    char read541(HC541 address, unsigned char t) {
     a9c:	cf 93       	push	r28
     a9e:	df 93       	push	r29
        SPICLKL();
     aa0:	ca ec       	ldi	r28, 0xCA	; 202
     aa2:	d0 e0       	ldi	r29, 0x00	; 0
     aa4:	98 81       	ld	r25, Y
     aa6:	9e 7f       	andi	r25, 0xFE	; 254
     aa8:	98 83       	st	Y, r25
        BGATEL();
     aaa:	2a 98       	cbi	0x05, 2	; 5
        BUS(BWRITE);
     aac:	9f ef       	ldi	r25, 0xFF	; 255
     aae:	97 b9       	out	0x07, r25	; 7
        BUSWRITE(address);
     ab0:	88 b9       	out	0x08, r24	; 8
        BGATEH();
     ab2:	2a 9a       	sbi	0x05, 2	; 5
        delayU(t);
     ab4:	86 2f       	mov	r24, r22
     ab6:	b2 df       	rcall	.-156    	; 0xa1c <_Z6delayUh>
        SPICLKH();
     ab8:	88 81       	ld	r24, Y
     aba:	81 60       	ori	r24, 0x01	; 1
     abc:	88 83       	st	Y, r24
        BGATEL();
     abe:	2a 98       	cbi	0x05, 2	; 5
        PORTC &= 0xf3;
     ac0:	88 b1       	in	r24, 0x08	; 8
     ac2:	83 7f       	andi	r24, 0xF3	; 243
     ac4:	88 b9       	out	0x08, r24	; 8
        return SPI(0);
     ac6:	80 e0       	ldi	r24, 0x00	; 0
     ac8:	99 df       	rcall	.-206    	; 0x9fc <_ZN12_GLOBAL__N_13SPIEc>
    }
     aca:	df 91       	pop	r29
     acc:	cf 91       	pop	r28
     ace:	08 95       	ret

00000ad0 <_ZN2LL8write574ENS_5HC574Ec>:

    void write574(HC574 address, char c) {
        BGATEL();
     ad0:	2a 98       	cbi	0x05, 2	; 5
        BUS(BWRITE);
     ad2:	9f ef       	ldi	r25, 0xFF	; 255
     ad4:	97 b9       	out	0x07, r25	; 7
        BUSWRITE(address);
     ad6:	88 b9       	out	0x08, r24	; 8
        BGATEH();
     ad8:	2a 9a       	sbi	0x05, 2	; 5
        SPI(c);
     ada:	86 2f       	mov	r24, r22
     adc:	8f df       	rcall	.-226    	; 0x9fc <_ZN12_GLOBAL__N_13SPIEc>
        BGATEL();
     ade:	2a 98       	cbi	0x05, 2	; 5
     ae0:	08 95       	ret

00000ae2 <_ZN2LL15servoSetAddressEc>:
    }

    void servoSetAddress(char c) {
     ae2:	cf 93       	push	r28
        u4 = (u4 & 0x1F) | mirror(c & 7);
     ae4:	60 91 f8 01 	lds	r22, 0x01F8
     ae8:	c6 2f       	mov	r28, r22
     aea:	cf 71       	andi	r28, 0x1F	; 31
     aec:	87 70       	andi	r24, 0x07	; 7
     aee:	9f df       	rcall	.-194    	; 0xa2e <_Z6mirrorc>
     af0:	68 2f       	mov	r22, r24
     af2:	6c 2b       	or	r22, r28
     af4:	60 93 f8 01 	sts	0x01F8, r22
        write574(U4, u4);
     af8:	80 e4       	ldi	r24, 0x40	; 64
     afa:	ea df       	rcall	.-44     	; 0xad0 <_ZN2LL8write574ENS_5HC574Ec>
    }
     afc:	cf 91       	pop	r28
     afe:	08 95       	ret

00000b00 <_ZN2LL16backMotorControlEc>:

    void backMotorControl(char c) {
        u5 = (u5 & 0x78) | (c & 0x87);
     b00:	87 78       	andi	r24, 0x87	; 135
     b02:	60 91 f7 01 	lds	r22, 0x01F7
     b06:	68 77       	andi	r22, 0x78	; 120
     b08:	68 2b       	or	r22, r24
     b0a:	60 93 f7 01 	sts	0x01F7, r22
        write574(U5, u5);
     b0e:	80 e6       	ldi	r24, 0x60	; 96
     b10:	df cf       	rjmp	.-66     	; 0xad0 <_ZN2LL8write574ENS_5HC574Ec>
     b12:	08 95       	ret

00000b14 <_ZN12_GLOBAL__N_18Slowmove4taskEv>:
		delay100ms(10);
		set(OPEN,0);
		
		
		
	}
     b14:	fc 01       	movw	r30, r24
     b16:	80 85       	ldd	r24, Z+8	; 0x08
     b18:	91 85       	ldd	r25, Z+9	; 0x09
     b1a:	01 96       	adiw	r24, 0x01	; 1
     b1c:	91 87       	std	Z+9, r25	; 0x09
     b1e:	80 87       	std	Z+8, r24	; 0x08
     b20:	22 85       	ldd	r18, Z+10	; 0x0a
     b22:	22 23       	and	r18, r18
     b24:	09 f4       	brne	.+2      	; 0xb28 <_ZN12_GLOBAL__N_18Slowmove4taskEv+0x14>
     b26:	40 c0       	rjmp	.+128    	; 0xba8 <_ZN12_GLOBAL__N_18Slowmove4taskEv+0x94>
     b28:	88 3e       	cpi	r24, 0xE8	; 232
     b2a:	93 40       	sbci	r25, 0x03	; 3
     b2c:	81 f5       	brne	.+96     	; 0xb8e <_ZN12_GLOBAL__N_18Slowmove4taskEv+0x7a>
     b2e:	84 81       	ldd	r24, Z+4	; 0x04
     b30:	95 81       	ldd	r25, Z+5	; 0x05
     b32:	dc 01       	movw	r26, r24
     b34:	aa 0f       	add	r26, r26
     b36:	bb 1f       	adc	r27, r27
     b38:	a8 5f       	subi	r26, 0xF8	; 248
     b3a:	bd 4f       	sbci	r27, 0xFD	; 253
     b3c:	2d 91       	ld	r18, X+
     b3e:	3c 91       	ld	r19, X
     b40:	46 81       	ldd	r20, Z+6	; 0x06
     b42:	57 81       	ldd	r21, Z+7	; 0x07
     b44:	24 17       	cp	r18, r20
     b46:	35 07       	cpc	r19, r21
     b48:	48 f4       	brcc	.+18     	; 0xb5c <_ZN12_GLOBAL__N_18Slowmove4taskEv+0x48>
     b4a:	88 0f       	add	r24, r24
     b4c:	99 1f       	adc	r25, r25
     b4e:	dc 01       	movw	r26, r24
     b50:	a8 5f       	subi	r26, 0xF8	; 248
     b52:	bd 4f       	sbci	r27, 0xFD	; 253
     b54:	2f 5f       	subi	r18, 0xFF	; 255
     b56:	3f 4f       	sbci	r19, 0xFF	; 255
     b58:	2d 93       	st	X+, r18
     b5a:	3c 93       	st	X, r19
     b5c:	84 81       	ldd	r24, Z+4	; 0x04
     b5e:	95 81       	ldd	r25, Z+5	; 0x05
     b60:	dc 01       	movw	r26, r24
     b62:	aa 0f       	add	r26, r26
     b64:	bb 1f       	adc	r27, r27
     b66:	a8 5f       	subi	r26, 0xF8	; 248
     b68:	bd 4f       	sbci	r27, 0xFD	; 253
     b6a:	2d 91       	ld	r18, X+
     b6c:	3c 91       	ld	r19, X
     b6e:	46 81       	ldd	r20, Z+6	; 0x06
     b70:	57 81       	ldd	r21, Z+7	; 0x07
     b72:	42 17       	cp	r20, r18
     b74:	53 07       	cpc	r21, r19
     b76:	48 f4       	brcc	.+18     	; 0xb8a <_ZN12_GLOBAL__N_18Slowmove4taskEv+0x76>
     b78:	88 0f       	add	r24, r24
     b7a:	99 1f       	adc	r25, r25
     b7c:	dc 01       	movw	r26, r24
     b7e:	a8 5f       	subi	r26, 0xF8	; 248
     b80:	bd 4f       	sbci	r27, 0xFD	; 253
     b82:	21 50       	subi	r18, 0x01	; 1
     b84:	31 09       	sbc	r19, r1
     b86:	2d 93       	st	X+, r18
     b88:	3c 93       	st	X, r19
     b8a:	11 86       	std	Z+9, r1	; 0x09
     b8c:	10 86       	std	Z+8, r1	; 0x08
     b8e:	a4 81       	ldd	r26, Z+4	; 0x04
     b90:	b5 81       	ldd	r27, Z+5	; 0x05
     b92:	86 81       	ldd	r24, Z+6	; 0x06
     b94:	97 81       	ldd	r25, Z+7	; 0x07
     b96:	aa 0f       	add	r26, r26
     b98:	bb 1f       	adc	r27, r27
     b9a:	a8 5f       	subi	r26, 0xF8	; 248
     b9c:	bd 4f       	sbci	r27, 0xFD	; 253
     b9e:	8d 93       	st	X+, r24
     ba0:	9c 93       	st	X, r25
     ba2:	89 2b       	or	r24, r25
     ba4:	09 f0       	breq	.+2      	; 0xba8 <_ZN12_GLOBAL__N_18Slowmove4taskEv+0x94>
     ba6:	12 86       	std	Z+10, r1	; 0x0a
     ba8:	08 95       	ret

00000baa <_ZN12_GLOBAL__N_15Servo4taskEv>:
     baa:	cf 93       	push	r28
     bac:	df 93       	push	r29
     bae:	ec 01       	movw	r28, r24
     bb0:	8c 89       	ldd	r24, Y+20	; 0x14
     bb2:	91 e0       	ldi	r25, 0x01	; 1
     bb4:	98 0f       	add	r25, r24
     bb6:	89 2f       	mov	r24, r25
     bb8:	87 70       	andi	r24, 0x07	; 7
     bba:	8c 8b       	std	Y+20, r24	; 0x14
     bbc:	92 df       	rcall	.-220    	; 0xae2 <_ZN2LL15servoSetAddressEc>
     bbe:	9c 89       	ldd	r25, Y+20	; 0x14
     bc0:	e9 2f       	mov	r30, r25
     bc2:	f0 e0       	ldi	r31, 0x00	; 0
     bc4:	32 96       	adiw	r30, 0x02	; 2
     bc6:	ee 0f       	add	r30, r30
     bc8:	ff 1f       	adc	r31, r31
     bca:	ec 0f       	add	r30, r28
     bcc:	fd 1f       	adc	r31, r29
     bce:	80 81       	ld	r24, Z
     bd0:	91 81       	ldd	r25, Z+1	; 0x01
     bd2:	00 97       	sbiw	r24, 0x00	; 0
     bd4:	51 f0       	breq	.+20     	; 0xbea <_ZN12_GLOBAL__N_15Servo4taskEv+0x40>
     bd6:	90 93 9b 00 	sts	0x009B, r25
     bda:	80 93 9a 00 	sts	0x009A, r24
     bde:	e0 e9       	ldi	r30, 0x90	; 144
     be0:	f0 e0       	ldi	r31, 0x00	; 0
     be2:	80 81       	ld	r24, Z
     be4:	80 62       	ori	r24, 0x20	; 32
     be6:	80 83       	st	Z, r24
     be8:	0b c0       	rjmp	.+22     	; 0xc00 <_ZN12_GLOBAL__N_15Servo4taskEv+0x56>
     bea:	80 e0       	ldi	r24, 0x00	; 0
     bec:	96 e3       	ldi	r25, 0x36	; 54
     bee:	90 93 9b 00 	sts	0x009B, r25
     bf2:	80 93 9a 00 	sts	0x009A, r24
     bf6:	e0 e9       	ldi	r30, 0x90	; 144
     bf8:	f0 e0       	ldi	r31, 0x00	; 0
     bfa:	80 81       	ld	r24, Z
     bfc:	8f 7d       	andi	r24, 0xDF	; 223
     bfe:	80 83       	st	Z, r24
     c00:	df 91       	pop	r29
     c02:	cf 91       	pop	r28
     c04:	08 95       	ret

00000c06 <_ZN5Servo3setEii>:
     c06:	fb 01       	movw	r30, r22
     c08:	ee 0f       	add	r30, r30
     c0a:	ff 1f       	adc	r31, r31
     c0c:	e8 5f       	subi	r30, 0xF8	; 248
     c0e:	fd 4f       	sbci	r31, 0xFD	; 253
     c10:	91 83       	std	Z+1, r25	; 0x01
     c12:	80 83       	st	Z, r24
     c14:	08 95       	ret

00000c16 <__vector_33>:
	
	
}


ISR(TIMER3_COMPB_vect) {
     c16:	1f 92       	push	r1
     c18:	0f 92       	push	r0
     c1a:	0f b6       	in	r0, 0x3f	; 63
     c1c:	0f 92       	push	r0
     c1e:	11 24       	eor	r1, r1
     c20:	0b b6       	in	r0, 0x3b	; 59
     c22:	0f 92       	push	r0
     c24:	2f 93       	push	r18
     c26:	3f 93       	push	r19
     c28:	4f 93       	push	r20
     c2a:	5f 93       	push	r21
     c2c:	6f 93       	push	r22
     c2e:	7f 93       	push	r23
     c30:	8f 93       	push	r24
     c32:	9f 93       	push	r25
     c34:	af 93       	push	r26
     c36:	bf 93       	push	r27
     c38:	ef 93       	push	r30
     c3a:	ff 93       	push	r31
    isrAppend(servo);
     c3c:	84 e0       	ldi	r24, 0x04	; 4
     c3e:	92 e0       	ldi	r25, 0x02	; 2
     c40:	d1 d3       	rcall	.+1954   	; 0x13e4 <_Z9isrAppendR4Task>
	// isrAppend(slowmove);
}
     c42:	ff 91       	pop	r31
     c44:	ef 91       	pop	r30
     c46:	bf 91       	pop	r27
     c48:	af 91       	pop	r26
     c4a:	9f 91       	pop	r25
     c4c:	8f 91       	pop	r24
     c4e:	7f 91       	pop	r23
     c50:	6f 91       	pop	r22
     c52:	5f 91       	pop	r21
     c54:	4f 91       	pop	r20
     c56:	3f 91       	pop	r19
     c58:	2f 91       	pop	r18
     c5a:	0f 90       	pop	r0
     c5c:	0b be       	out	0x3b, r0	; 59
     c5e:	0f 90       	pop	r0
     c60:	0f be       	out	0x3f, r0	; 63
     c62:	0f 90       	pop	r0
     c64:	1f 90       	pop	r1
     c66:	18 95       	reti

00000c68 <_GLOBAL__sub_I__ZN5Servo10delay100msEi>:
     c68:	86 e0       	ldi	r24, 0x06	; 6
     c6a:	92 e0       	ldi	r25, 0x02	; 2
     c6c:	13 d3       	rcall	.+1574   	; 0x1294 <_ZN7ElementC1Ev>

namespace {

    class Servo: public Task {
    public:
        Servo(void) {
     c6e:	e4 e0       	ldi	r30, 0x04	; 4
     c70:	f2 e0       	ldi	r31, 0x02	; 2
     c72:	86 e4       	ldi	r24, 0x46	; 70
     c74:	91 e0       	ldi	r25, 0x01	; 1
     c76:	91 83       	std	Z+1, r25	; 0x01
     c78:	80 83       	st	Z, r24
            DDRB |=_BV(7);
     c7a:	27 9a       	sbi	0x04, 7	; 4
            OCR3B=13824;
     c7c:	80 e0       	ldi	r24, 0x00	; 0
     c7e:	96 e3       	ldi	r25, 0x36	; 54
     c80:	90 93 9b 00 	sts	0x009B, r25
     c84:	80 93 9a 00 	sts	0x009A, r24
            TIMSK3|=_BV(OCIE3B);
     c88:	a1 e7       	ldi	r26, 0x71	; 113
     c8a:	b0 e0       	ldi	r27, 0x00	; 0
     c8c:	8c 91       	ld	r24, X
     c8e:	84 60       	ori	r24, 0x04	; 4
     c90:	8c 93       	st	X, r24
            channel=width[0]=width[1]=0;
     c92:	17 82       	std	Z+7, r1	; 0x07
     c94:	16 82       	std	Z+6, r1	; 0x06
     c96:	15 82       	std	Z+5, r1	; 0x05
     c98:	14 82       	std	Z+4, r1	; 0x04
     c9a:	14 8a       	std	Z+20, r1	; 0x14
            width[2]=width[3]=0;
     c9c:	13 86       	std	Z+11, r1	; 0x0b
     c9e:	12 86       	std	Z+10, r1	; 0x0a
     ca0:	11 86       	std	Z+9, r1	; 0x09
     ca2:	10 86       	std	Z+8, r1	; 0x08
            width[4]=width[5]=0;
     ca4:	17 86       	std	Z+15, r1	; 0x0f
     ca6:	16 86       	std	Z+14, r1	; 0x0e
     ca8:	15 86       	std	Z+13, r1	; 0x0d
     caa:	14 86       	std	Z+12, r1	; 0x0c
            width[6]=width[7]=0;
     cac:	13 8a       	std	Z+19, r1	; 0x13
     cae:	12 8a       	std	Z+18, r1	; 0x12
     cb0:	11 8a       	std	Z+17, r1	; 0x11
     cb2:	10 8a       	std	Z+16, r1	; 0x10
     cb4:	8b ef       	ldi	r24, 0xFB	; 251
     cb6:	91 e0       	ldi	r25, 0x01	; 1
     cb8:	ed d2       	rcall	.+1498   	; 0x1294 <_ZN7ElementC1Ev>
namespace {

	class Slowmove: public Task { 
		
		public:
		Slowmove(void) {
     cba:	e9 ef       	ldi	r30, 0xF9	; 249
     cbc:	f1 e0       	ldi	r31, 0x01	; 1
     cbe:	8c e4       	ldi	r24, 0x4C	; 76
     cc0:	91 e0       	ldi	r25, 0x01	; 1
     cc2:	91 83       	std	Z+1, r25	; 0x01
     cc4:	80 83       	st	Z, r24
			_start=false;
     cc6:	12 86       	std	Z+10, r1	; 0x0a
     cc8:	08 95       	ret

00000cca <_ZN6Timer34taskEv>:
        if (e) if (current == &t) current = e;
    }
private:
    List list;
    Timer *current;
    void task(void) {
     cca:	cf 93       	push	r28
     ccc:	df 93       	push	r29
     cce:	ec 01       	movw	r28, r24
        if ((current = (Timer*)list.getNext(current))) {
     cd0:	68 85       	ldd	r22, Y+8	; 0x08
     cd2:	79 85       	ldd	r23, Y+9	; 0x09
     cd4:	61 15       	cp	r22, r1
     cd6:	71 05       	cpc	r23, r1
     cd8:	19 f0       	breq	.+6      	; 0xce0 <_ZN6Timer34taskEv+0x16>
     cda:	6e 5f       	subi	r22, 0xFE	; 254
     cdc:	7f 4f       	sbci	r23, 0xFF	; 255
     cde:	02 c0       	rjmp	.+4      	; 0xce4 <_ZN6Timer34taskEv+0x1a>
     ce0:	60 e0       	ldi	r22, 0x00	; 0
     ce2:	70 e0       	ldi	r23, 0x00	; 0
     ce4:	ce 01       	movw	r24, r28
     ce6:	04 96       	adiw	r24, 0x04	; 4
     ce8:	e2 d2       	rcall	.+1476   	; 0x12ae <_ZN4List7getNextEP7Element>
     cea:	00 97       	sbiw	r24, 0x00	; 0
     cec:	c9 f0       	breq	.+50     	; 0xd20 <_ZN6Timer34taskEv+0x56>
     cee:	02 97       	sbiw	r24, 0x02	; 2
     cf0:	99 87       	std	Y+9, r25	; 0x09
     cf2:	88 87       	std	Y+8, r24	; 0x08
     cf4:	00 97       	sbiw	r24, 0x00	; 0
     cf6:	b1 f0       	breq	.+44     	; 0xd24 <_ZN6Timer34taskEv+0x5a>
            if (--current->count == 0) current->timeout();
     cf8:	fc 01       	movw	r30, r24
     cfa:	84 81       	ldd	r24, Z+4	; 0x04
     cfc:	95 81       	ldd	r25, Z+5	; 0x05
     cfe:	01 97       	sbiw	r24, 0x01	; 1
     d00:	95 83       	std	Z+5, r25	; 0x05
     d02:	84 83       	std	Z+4, r24	; 0x04
     d04:	89 2b       	or	r24, r25
     d06:	49 f4       	brne	.+18     	; 0xd1a <_ZN6Timer34taskEv+0x50>
     d08:	88 85       	ldd	r24, Y+8	; 0x08
     d0a:	99 85       	ldd	r25, Y+9	; 0x09
     d0c:	dc 01       	movw	r26, r24
     d0e:	ed 91       	ld	r30, X+
     d10:	fc 91       	ld	r31, X
     d12:	01 90       	ld	r0, Z+
     d14:	f0 81       	ld	r31, Z
     d16:	e0 2d       	mov	r30, r0
     d18:	09 95       	icall
            kerAppend(*this);
     d1a:	ce 01       	movw	r24, r28
     d1c:	90 d3       	rcall	.+1824   	; 0x143e <_Z9kerAppendR4Task>
     d1e:	02 c0       	rjmp	.+4      	; 0xd24 <_ZN6Timer34taskEv+0x5a>
    }
private:
    List list;
    Timer *current;
    void task(void) {
        if ((current = (Timer*)list.getNext(current))) {
     d20:	19 86       	std	Y+9, r1	; 0x09
     d22:	18 86       	std	Y+8, r1	; 0x08
            if (--current->count == 0) current->timeout();
            kerAppend(*this);
        }
    }
     d24:	df 91       	pop	r29
     d26:	cf 91       	pop	r28
     d28:	08 95       	ret

00000d2a <__vector_34>:
} timer3;

ISR(TIMER3_OVF_vect) {
     d2a:	1f 92       	push	r1
     d2c:	0f 92       	push	r0
     d2e:	0f b6       	in	r0, 0x3f	; 63
     d30:	0f 92       	push	r0
     d32:	11 24       	eor	r1, r1
     d34:	0b b6       	in	r0, 0x3b	; 59
     d36:	0f 92       	push	r0
     d38:	2f 93       	push	r18
     d3a:	3f 93       	push	r19
     d3c:	4f 93       	push	r20
     d3e:	5f 93       	push	r21
     d40:	6f 93       	push	r22
     d42:	7f 93       	push	r23
     d44:	8f 93       	push	r24
     d46:	9f 93       	push	r25
     d48:	af 93       	push	r26
     d4a:	bf 93       	push	r27
     d4c:	ef 93       	push	r30
     d4e:	ff 93       	push	r31
    isrAppend(timer3);
     d50:	8b e1       	ldi	r24, 0x1B	; 27
     d52:	92 e0       	ldi	r25, 0x02	; 2
     d54:	47 d3       	rcall	.+1678   	; 0x13e4 <_Z9isrAppendR4Task>
}
     d56:	ff 91       	pop	r31
     d58:	ef 91       	pop	r30
     d5a:	bf 91       	pop	r27
     d5c:	af 91       	pop	r26
     d5e:	9f 91       	pop	r25
     d60:	8f 91       	pop	r24
     d62:	7f 91       	pop	r23
     d64:	6f 91       	pop	r22
     d66:	5f 91       	pop	r21
     d68:	4f 91       	pop	r20
     d6a:	3f 91       	pop	r19
     d6c:	2f 91       	pop	r18
     d6e:	0f 90       	pop	r0
     d70:	0b be       	out	0x3b, r0	; 59
     d72:	0f 90       	pop	r0
     d74:	0f be       	out	0x3f, r0	; 63
     d76:	0f 90       	pop	r0
     d78:	1f 90       	pop	r1
     d7a:	18 95       	reti

00000d7c <_ZN5timer3addER5Timer>:
        TCCR3B = 0b00011001;	// clk/1
        OCR3A = 27648;			// 2.5 ms for 11.0592 MHz
        TIMSK3 |= _BV(TOIE3);	// enable interrupt
    }
    void add(Timer &t) {
        list.append(t);
     d7c:	bc 01       	movw	r22, r24
     d7e:	6e 5f       	subi	r22, 0xFE	; 254
     d80:	7f 4f       	sbci	r23, 0xFF	; 255
     d82:	8f e1       	ldi	r24, 0x1F	; 31
     d84:	92 e0       	ldi	r25, 0x02	; 2
     d86:	b1 c2       	rjmp	.+1378   	; 0x12ea <_ZN4List6appendER7Element>
     d88:	08 95       	ret

00000d8a <_ZN5timer6removeER5Timer>:

namespace timer {
    void add(Timer &t) {
        timer3.add(t);
    }
    void remove(Timer &t) {
     d8a:	cf 93       	push	r28
     d8c:	df 93       	push	r29
     d8e:	ec 01       	movw	r28, r24
    }
    void add(Timer &t) {
        list.append(t);
    }
    void remove(Timer &t) {
        Timer* e = (Timer*)list.remove(t);
     d90:	bc 01       	movw	r22, r24
     d92:	6e 5f       	subi	r22, 0xFE	; 254
     d94:	7f 4f       	sbci	r23, 0xFF	; 255
     d96:	8f e1       	ldi	r24, 0x1F	; 31
     d98:	92 e0       	ldi	r25, 0x02	; 2
     d9a:	d0 d2       	rcall	.+1440   	; 0x133c <_ZN4List6removeER7Element>
     d9c:	00 97       	sbiw	r24, 0x00	; 0
     d9e:	79 f0       	breq	.+30     	; 0xdbe <_ZN5timer6removeER5Timer+0x34>
     da0:	9c 01       	movw	r18, r24
     da2:	22 50       	subi	r18, 0x02	; 2
     da4:	31 09       	sbc	r19, r1
        if (e) if (current == &t) current = e;
     da6:	59 f0       	breq	.+22     	; 0xdbe <_ZN5timer6removeER5Timer+0x34>
     da8:	80 91 23 02 	lds	r24, 0x0223
     dac:	90 91 24 02 	lds	r25, 0x0224
     db0:	c8 17       	cp	r28, r24
     db2:	d9 07       	cpc	r29, r25
     db4:	21 f4       	brne	.+8      	; 0xdbe <_ZN5timer6removeER5Timer+0x34>
     db6:	30 93 24 02 	sts	0x0224, r19
     dba:	20 93 23 02 	sts	0x0223, r18
    void add(Timer &t) {
        timer3.add(t);
    }
    void remove(Timer &t) {
        timer3.remove(t);
    }
     dbe:	df 91       	pop	r29
     dc0:	cf 91       	pop	r28
     dc2:	08 95       	ret

00000dc4 <_GLOBAL__sub_I___vector_34>:
     dc4:	cf 93       	push	r28
     dc6:	df 93       	push	r29
     dc8:	8d e1       	ldi	r24, 0x1D	; 29
     dca:	92 e0       	ldi	r25, 0x02	; 2
     dcc:	63 d2       	rcall	.+1222   	; 0x1294 <_ZN7ElementC1Ev>
#include "Task.h"
#include "Timer.h"

static class Timer3 : public Task {
public:
    Timer3(void) : current(0) {
     dce:	cb e1       	ldi	r28, 0x1B	; 27
     dd0:	d2 e0       	ldi	r29, 0x02	; 2
     dd2:	82 e5       	ldi	r24, 0x52	; 82
     dd4:	91 e0       	ldi	r25, 0x01	; 1
     dd6:	99 83       	std	Y+1, r25	; 0x01
     dd8:	88 83       	st	Y, r24
     dda:	8f e1       	ldi	r24, 0x1F	; 31
     ddc:	92 e0       	ldi	r25, 0x02	; 2
     dde:	5e d2       	rcall	.+1212   	; 0x129c <_ZN4ListC1Ev>
     de0:	19 86       	std	Y+9, r1	; 0x09
     de2:	18 86       	std	Y+8, r1	; 0x08
        TCCR3A = 0b00000011;	// OC3A & OC3B disconnected, Fast PWM
     de4:	83 e0       	ldi	r24, 0x03	; 3
     de6:	80 93 90 00 	sts	0x0090, r24
        TCCR3B = 0b00011001;	// clk/1
     dea:	89 e1       	ldi	r24, 0x19	; 25
     dec:	80 93 91 00 	sts	0x0091, r24
        OCR3A = 27648;			// 2.5 ms for 11.0592 MHz
     df0:	80 e0       	ldi	r24, 0x00	; 0
     df2:	9c e6       	ldi	r25, 0x6C	; 108
     df4:	90 93 99 00 	sts	0x0099, r25
     df8:	80 93 98 00 	sts	0x0098, r24
        TIMSK3 |= _BV(TOIE3);	// enable interrupt
     dfc:	e1 e7       	ldi	r30, 0x71	; 113
     dfe:	f0 e0       	ldi	r31, 0x00	; 0
     e00:	80 81       	ld	r24, Z
     e02:	81 60       	ori	r24, 0x01	; 1
     e04:	80 83       	st	Z, r24
        timer3.add(t);
    }
    void remove(Timer &t) {
        timer3.remove(t);
    }
     e06:	df 91       	pop	r29
     e08:	cf 91       	pop	r28
     e0a:	08 95       	ret

00000e0c <_ZL5uitosjPch>:
		return timer2.R_speed;
	}
	
	void setP(int P){	timer2.kP = P;	}
	void setI(int I){	timer2.kI = I;	}
	void setD(int D){	timer2.kD = D;	}
     e0c:	ef 92       	push	r14
     e0e:	ff 92       	push	r15
     e10:	0f 93       	push	r16
     e12:	1f 93       	push	r17
     e14:	cf 93       	push	r28
     e16:	df 93       	push	r29
     e18:	7c 01       	movw	r14, r24
     e1a:	8b 01       	movw	r16, r22
     e1c:	50 e0       	ldi	r21, 0x00	; 0
     e1e:	fa 01       	movw	r30, r20
     e20:	31 97       	sbiw	r30, 0x01	; 1
     e22:	e6 0f       	add	r30, r22
     e24:	f7 1f       	adc	r31, r23
     e26:	9c 01       	movw	r18, r24
     e28:	ad ec       	ldi	r26, 0xCD	; 205
     e2a:	bc ec       	ldi	r27, 0xCC	; 204
     e2c:	2b d3       	rcall	.+1622   	; 0x1484 <__umulhisi3>
     e2e:	ec 01       	movw	r28, r24
     e30:	d6 95       	lsr	r29
     e32:	c7 95       	ror	r28
     e34:	d6 95       	lsr	r29
     e36:	c7 95       	ror	r28
     e38:	d6 95       	lsr	r29
     e3a:	c7 95       	ror	r28
     e3c:	9e 01       	movw	r18, r28
     e3e:	22 0f       	add	r18, r18
     e40:	33 1f       	adc	r19, r19
     e42:	ce 01       	movw	r24, r28
     e44:	88 0f       	add	r24, r24
     e46:	99 1f       	adc	r25, r25
     e48:	88 0f       	add	r24, r24
     e4a:	99 1f       	adc	r25, r25
     e4c:	88 0f       	add	r24, r24
     e4e:	99 1f       	adc	r25, r25
     e50:	82 0f       	add	r24, r18
     e52:	93 1f       	adc	r25, r19
     e54:	97 01       	movw	r18, r14
     e56:	28 1b       	sub	r18, r24
     e58:	39 0b       	sbc	r19, r25
     e5a:	c9 01       	movw	r24, r18
     e5c:	80 5d       	subi	r24, 0xD0	; 208
     e5e:	80 83       	st	Z, r24
     e60:	42 50       	subi	r20, 0x02	; 2
     e62:	51 09       	sbc	r21, r1
     e64:	3a f1       	brmi	.+78     	; 0xeb4 <_ZL5uitosjPch+0xa8>
     e66:	78 01       	movw	r14, r16
     e68:	20 97       	sbiw	r28, 0x00	; 0
     e6a:	f1 f0       	breq	.+60     	; 0xea8 <_ZL5uitosjPch+0x9c>
     e6c:	9e 01       	movw	r18, r28
     e6e:	ad ec       	ldi	r26, 0xCD	; 205
     e70:	bc ec       	ldi	r27, 0xCC	; 204
     e72:	08 d3       	rcall	.+1552   	; 0x1484 <__umulhisi3>
     e74:	ac 01       	movw	r20, r24
     e76:	56 95       	lsr	r21
     e78:	47 95       	ror	r20
     e7a:	56 95       	lsr	r21
     e7c:	47 95       	ror	r20
     e7e:	56 95       	lsr	r21
     e80:	47 95       	ror	r20
     e82:	9a 01       	movw	r18, r20
     e84:	22 0f       	add	r18, r18
     e86:	33 1f       	adc	r19, r19
     e88:	ca 01       	movw	r24, r20
     e8a:	88 0f       	add	r24, r24
     e8c:	99 1f       	adc	r25, r25
     e8e:	88 0f       	add	r24, r24
     e90:	99 1f       	adc	r25, r25
     e92:	88 0f       	add	r24, r24
     e94:	99 1f       	adc	r25, r25
     e96:	82 0f       	add	r24, r18
     e98:	93 1f       	adc	r25, r19
     e9a:	9e 01       	movw	r18, r28
     e9c:	28 1b       	sub	r18, r24
     e9e:	39 0b       	sbc	r19, r25
     ea0:	90 e3       	ldi	r25, 0x30	; 48
     ea2:	92 0f       	add	r25, r18
     ea4:	ea 01       	movw	r28, r20
     ea6:	01 c0       	rjmp	.+2      	; 0xeaa <_ZL5uitosjPch+0x9e>
     ea8:	90 e2       	ldi	r25, 0x20	; 32
     eaa:	31 97       	sbiw	r30, 0x01	; 1
     eac:	90 83       	st	Z, r25
     eae:	ee 15       	cp	r30, r14
     eb0:	ff 05       	cpc	r31, r15
     eb2:	d1 f6       	brne	.-76     	; 0xe68 <_ZL5uitosjPch+0x5c>
     eb4:	cd 2b       	or	r28, r29
     eb6:	19 f0       	breq	.+6      	; 0xebe <_ZL5uitosjPch+0xb2>
     eb8:	8a e2       	ldi	r24, 0x2A	; 42
     eba:	f8 01       	movw	r30, r16
     ebc:	80 83       	st	Z, r24
     ebe:	df 91       	pop	r29
     ec0:	cf 91       	pop	r28
     ec2:	1f 91       	pop	r17
     ec4:	0f 91       	pop	r16
     ec6:	ff 90       	pop	r15
     ec8:	ef 90       	pop	r14
     eca:	08 95       	ret

00000ecc <_ZN12_GLOBAL__N_16Timer24taskEv>:
     ecc:	cf 92       	push	r12
     ece:	df 92       	push	r13
     ed0:	ef 92       	push	r14
     ed2:	ff 92       	push	r15
     ed4:	0f 93       	push	r16
     ed6:	1f 93       	push	r17
     ed8:	cf 93       	push	r28
     eda:	df 93       	push	r29
     edc:	ec 01       	movw	r28, r24
     ede:	e6 da       	rcall	.-2612   	; 0x4ac <_ZN6Button6getBF1Ev>
     ee0:	8c 01       	movw	r16, r24
     ee2:	e7 da       	rcall	.-2610   	; 0x4b2 <_ZN6Button6getBF2Ev>
     ee4:	6e e1       	ldi	r22, 0x1E	; 30
     ee6:	8c ec       	ldi	r24, 0xCC	; 204
     ee8:	d9 dd       	rcall	.-1102   	; 0xa9c <_ZN2LL7read541ENS_5HC541Eh>
     eea:	88 a7       	std	Y+40, r24	; 0x28
     eec:	36 dd       	rcall	.-1428   	; 0x95a <_Z12displacementc>
     eee:	08 97       	sbiw	r24, 0x08	; 8
     ef0:	7c 01       	movw	r14, r24
     ef2:	6e e1       	ldi	r22, 0x1E	; 30
     ef4:	8c ea       	ldi	r24, 0xAC	; 172
     ef6:	d2 dd       	rcall	.-1116   	; 0xa9c <_ZN2LL7read541ENS_5HC541Eh>
     ef8:	89 a7       	std	Y+41, r24	; 0x29
     efa:	81 e0       	ldi	r24, 0x01	; 1
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	23 db       	rcall	.-2490   	; 0x546 <_Znwj>
     f00:	6c 01       	movw	r12, r24
     f02:	fc 01       	movw	r30, r24
     f04:	10 86       	std	Z+8, r1	; 0x08
     f06:	89 a5       	ldd	r24, Y+41	; 0x29
     f08:	92 dd       	rcall	.-1244   	; 0xa2e <_Z6mirrorc>
     f0a:	f6 01       	movw	r30, r12
     f0c:	20 e0       	ldi	r18, 0x00	; 0
     f0e:	30 e0       	ldi	r19, 0x00	; 0
     f10:	68 2f       	mov	r22, r24
     f12:	70 e0       	ldi	r23, 0x00	; 0
     f14:	ab 01       	movw	r20, r22
     f16:	02 2e       	mov	r0, r18
     f18:	02 c0       	rjmp	.+4      	; 0xf1e <_ZN12_GLOBAL__N_16Timer24taskEv+0x52>
     f1a:	55 95       	asr	r21
     f1c:	47 95       	ror	r20
     f1e:	0a 94       	dec	r0
     f20:	e2 f7       	brpl	.-8      	; 0xf1a <_ZN12_GLOBAL__N_16Timer24taskEv+0x4e>
     f22:	40 fd       	sbrc	r20, 0
     f24:	02 c0       	rjmp	.+4      	; 0xf2a <_ZN12_GLOBAL__N_16Timer24taskEv+0x5e>
     f26:	90 e3       	ldi	r25, 0x30	; 48
     f28:	01 c0       	rjmp	.+2      	; 0xf2c <_ZN12_GLOBAL__N_16Timer24taskEv+0x60>
     f2a:	91 e3       	ldi	r25, 0x31	; 49
     f2c:	91 93       	st	Z+, r25
     f2e:	2f 5f       	subi	r18, 0xFF	; 255
     f30:	3f 4f       	sbci	r19, 0xFF	; 255
     f32:	28 30       	cpi	r18, 0x08	; 8
     f34:	31 05       	cpc	r19, r1
     f36:	71 f7       	brne	.-36     	; 0xf14 <_ZN12_GLOBAL__N_16Timer24taskEv+0x48>
     f38:	b6 01       	movw	r22, r12
     f3a:	80 e0       	ldi	r24, 0x00	; 0
     f3c:	b9 dc       	rcall	.-1678   	; 0x8b0 <_ZN3LCD5printEhPc>
     f3e:	6a a1       	ldd	r22, Y+34	; 0x22
     f40:	7b a1       	ldd	r23, Y+35	; 0x23
     f42:	82 e3       	ldi	r24, 0x32	; 50
     f44:	86 9f       	mul	r24, r22
     f46:	90 01       	movw	r18, r0
     f48:	87 9f       	mul	r24, r23
     f4a:	30 0d       	add	r19, r0
     f4c:	11 24       	eor	r1, r1
     f4e:	4c a1       	ldd	r20, Y+36	; 0x24
     f50:	58 a1       	ldd	r21, Y+32	; 0x20
     f52:	8c 8d       	ldd	r24, Y+28	; 0x1c
     f54:	9d 8d       	ldd	r25, Y+29	; 0x1d
     f56:	8e 0d       	add	r24, r14
     f58:	9f 1d       	adc	r25, r15
     f5a:	28 17       	cp	r18, r24
     f5c:	39 07       	cpc	r19, r25
     f5e:	0c f4       	brge	.+2      	; 0xf62 <_ZN12_GLOBAL__N_16Timer24taskEv+0x96>
     f60:	c9 01       	movw	r24, r18
     f62:	31 95       	neg	r19
     f64:	21 95       	neg	r18
     f66:	31 09       	sbc	r19, r1
     f68:	82 17       	cp	r24, r18
     f6a:	93 07       	cpc	r25, r19
     f6c:	0c f4       	brge	.+2      	; 0xf70 <_ZN12_GLOBAL__N_16Timer24taskEv+0xa4>
     f6e:	c9 01       	movw	r24, r18
     f70:	9d 8f       	std	Y+29, r25	; 0x1d
     f72:	8c 8f       	std	Y+28, r24	; 0x1c
     f74:	2e 8d       	ldd	r18, Y+30	; 0x1e
     f76:	3f 8d       	ldd	r19, Y+31	; 0x1f
     f78:	f7 01       	movw	r30, r14
     f7a:	e2 1b       	sub	r30, r18
     f7c:	f3 0b       	sbc	r31, r19
     f7e:	9f 01       	movw	r18, r30
     f80:	ff 8e       	std	Y+31, r15	; 0x1f
     f82:	ee 8e       	std	Y+30, r14	; 0x1e
     f84:	5e 9d       	mul	r21, r14
     f86:	f0 01       	movw	r30, r0
     f88:	5f 9d       	mul	r21, r15
     f8a:	f0 0d       	add	r31, r0
     f8c:	11 24       	eor	r1, r1
     f8e:	77 27       	eor	r23, r23
     f90:	66 d2       	rcall	.+1228   	; 0x145e <__divmodhi4>
     f92:	e6 0f       	add	r30, r22
     f94:	f7 1f       	adc	r31, r23
     f96:	42 9f       	mul	r20, r18
     f98:	60 01       	movw	r12, r0
     f9a:	43 9f       	mul	r20, r19
     f9c:	d0 0c       	add	r13, r0
     f9e:	11 24       	eor	r1, r1
     fa0:	ce 0e       	add	r12, r30
     fa2:	df 1e       	adc	r13, r31
     fa4:	88 a5       	ldd	r24, Y+40	; 0x28
     fa6:	43 dd       	rcall	.-1402   	; 0xa2e <_Z6mirrorc>
     fa8:	f8 01       	movw	r30, r16
     faa:	38 96       	adiw	r30, 0x08	; 8
     fac:	d8 01       	movw	r26, r16
     fae:	20 e0       	ldi	r18, 0x00	; 0
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	68 2f       	mov	r22, r24
     fb4:	70 e0       	ldi	r23, 0x00	; 0
     fb6:	ab 01       	movw	r20, r22
     fb8:	02 2e       	mov	r0, r18
     fba:	02 c0       	rjmp	.+4      	; 0xfc0 <_ZN12_GLOBAL__N_16Timer24taskEv+0xf4>
     fbc:	55 95       	asr	r21
     fbe:	47 95       	ror	r20
     fc0:	0a 94       	dec	r0
     fc2:	e2 f7       	brpl	.-8      	; 0xfbc <_ZN12_GLOBAL__N_16Timer24taskEv+0xf0>
     fc4:	40 fd       	sbrc	r20, 0
     fc6:	02 c0       	rjmp	.+4      	; 0xfcc <_ZN12_GLOBAL__N_16Timer24taskEv+0x100>
     fc8:	9e e2       	ldi	r25, 0x2E	; 46
     fca:	01 c0       	rjmp	.+2      	; 0xfce <_ZN12_GLOBAL__N_16Timer24taskEv+0x102>
     fcc:	9a e2       	ldi	r25, 0x2A	; 42
     fce:	92 93       	st	-Z, r25
     fd0:	2f 5f       	subi	r18, 0xFF	; 255
     fd2:	3f 4f       	sbci	r19, 0xFF	; 255
     fd4:	ea 17       	cp	r30, r26
     fd6:	fb 07       	cpc	r31, r27
     fd8:	71 f7       	brne	.-36     	; 0xfb6 <_ZN12_GLOBAL__N_16Timer24taskEv+0xea>
     fda:	ff 20       	and	r15, r15
     fdc:	3c f4       	brge	.+14     	; 0xfec <_ZN12_GLOBAL__N_16Timer24taskEv+0x120>
     fde:	f1 94       	neg	r15
     fe0:	e1 94       	neg	r14
     fe2:	f1 08       	sbc	r15, r1
     fe4:	8d e2       	ldi	r24, 0x2D	; 45
     fe6:	f8 01       	movw	r30, r16
     fe8:	81 87       	std	Z+9, r24	; 0x09
     fea:	03 c0       	rjmp	.+6      	; 0xff2 <_ZN12_GLOBAL__N_16Timer24taskEv+0x126>
     fec:	8b e2       	ldi	r24, 0x2B	; 43
     fee:	f8 01       	movw	r30, r16
     ff0:	81 87       	std	Z+9, r24	; 0x09
     ff2:	41 e0       	ldi	r20, 0x01	; 1
     ff4:	b8 01       	movw	r22, r16
     ff6:	66 5f       	subi	r22, 0xF6	; 246
     ff8:	7f 4f       	sbci	r23, 0xFF	; 255
     ffa:	c7 01       	movw	r24, r14
     ffc:	07 df       	rcall	.-498    	; 0xe0c <_ZL5uitosjPch>
     ffe:	dd 20       	and	r13, r13
    1000:	44 f4       	brge	.+16     	; 0x1012 <_ZN12_GLOBAL__N_16Timer24taskEv+0x146>
    1002:	88 27       	eor	r24, r24
    1004:	99 27       	eor	r25, r25
    1006:	8c 19       	sub	r24, r12
    1008:	9d 09       	sbc	r25, r13
    100a:	2d e2       	ldi	r18, 0x2D	; 45
    100c:	f8 01       	movw	r30, r16
    100e:	23 87       	std	Z+11, r18	; 0x0b
    1010:	04 c0       	rjmp	.+8      	; 0x101a <_ZN12_GLOBAL__N_16Timer24taskEv+0x14e>
    1012:	8b e2       	ldi	r24, 0x2B	; 43
    1014:	f8 01       	movw	r30, r16
    1016:	83 87       	std	Z+11, r24	; 0x0b
    1018:	c6 01       	movw	r24, r12
    101a:	b8 01       	movw	r22, r16
    101c:	64 5f       	subi	r22, 0xF4	; 244
    101e:	7f 4f       	sbci	r23, 0xFF	; 255
    1020:	44 e0       	ldi	r20, 0x04	; 4
    1022:	f4 de       	rcall	.-536    	; 0xe0c <_ZL5uitosjPch>
    1024:	68 89       	ldd	r22, Y+16	; 0x10
    1026:	79 89       	ldd	r23, Y+17	; 0x11
    1028:	cb 01       	movw	r24, r22
    102a:	8c 19       	sub	r24, r12
    102c:	9d 09       	sbc	r25, r13
    102e:	96 01       	movw	r18, r12
    1030:	26 0f       	add	r18, r22
    1032:	37 1f       	adc	r19, r23
    1034:	2f 3f       	cpi	r18, 0xFF	; 255
    1036:	31 05       	cpc	r19, r1
    1038:	19 f0       	breq	.+6      	; 0x1040 <_ZN12_GLOBAL__N_16Timer24taskEv+0x174>
    103a:	14 f0       	brlt	.+4      	; 0x1040 <_ZN12_GLOBAL__N_16Timer24taskEv+0x174>
    103c:	2f ef       	ldi	r18, 0xFF	; 255
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	8f 3f       	cpi	r24, 0xFF	; 255
    1042:	91 05       	cpc	r25, r1
    1044:	19 f0       	breq	.+6      	; 0x104c <_ZN12_GLOBAL__N_16Timer24taskEv+0x180>
    1046:	14 f0       	brlt	.+4      	; 0x104c <_ZN12_GLOBAL__N_16Timer24taskEv+0x180>
    1048:	8f ef       	ldi	r24, 0xFF	; 255
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	69 01       	movw	r12, r18
    104e:	33 23       	and	r19, r19
    1050:	14 f4       	brge	.+4      	; 0x1056 <_ZN12_GLOBAL__N_16Timer24taskEv+0x18a>
    1052:	c1 2c       	mov	r12, r1
    1054:	d1 2c       	mov	r13, r1
    1056:	c0 92 b3 00 	sts	0x00B3, r12
    105a:	99 23       	and	r25, r25
    105c:	14 f4       	brge	.+4      	; 0x1062 <_ZN12_GLOBAL__N_16Timer24taskEv+0x196>
    105e:	80 e0       	ldi	r24, 0x00	; 0
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	80 93 b4 00 	sts	0x00B4, r24
    1066:	df 91       	pop	r29
    1068:	cf 91       	pop	r28
    106a:	1f 91       	pop	r17
    106c:	0f 91       	pop	r16
    106e:	ff 90       	pop	r15
    1070:	ef 90       	pop	r14
    1072:	df 90       	pop	r13
    1074:	cf 90       	pop	r12
    1076:	08 95       	ret

00001078 <__vector_11>:
    1078:	1f 92       	push	r1
    107a:	0f 92       	push	r0
    107c:	0f b6       	in	r0, 0x3f	; 63
    107e:	0f 92       	push	r0
    1080:	11 24       	eor	r1, r1
    1082:	0b b6       	in	r0, 0x3b	; 59
    1084:	0f 92       	push	r0
    1086:	2f 93       	push	r18
    1088:	3f 93       	push	r19
    108a:	4f 93       	push	r20
    108c:	5f 93       	push	r21
    108e:	6f 93       	push	r22
    1090:	7f 93       	push	r23
    1092:	8f 93       	push	r24
    1094:	9f 93       	push	r25
    1096:	af 93       	push	r26
    1098:	bf 93       	push	r27
    109a:	ef 93       	push	r30
    109c:	ff 93       	push	r31
    109e:	86 b5       	in	r24, 0x26	; 38
    10a0:	80 93 37 02 	sts	0x0237, r24
    10a4:	80 91 84 00 	lds	r24, 0x0084
    10a8:	80 93 36 02 	sts	0x0236, r24
    10ac:	88 e3       	ldi	r24, 0x38	; 56
    10ae:	92 e0       	ldi	r25, 0x02	; 2
    10b0:	99 d1       	rcall	.+818    	; 0x13e4 <_Z9isrAppendR4Task>
    10b2:	ff 91       	pop	r31
    10b4:	ef 91       	pop	r30
    10b6:	bf 91       	pop	r27
    10b8:	af 91       	pop	r26
    10ba:	9f 91       	pop	r25
    10bc:	8f 91       	pop	r24
    10be:	7f 91       	pop	r23
    10c0:	6f 91       	pop	r22
    10c2:	5f 91       	pop	r21
    10c4:	4f 91       	pop	r20
    10c6:	3f 91       	pop	r19
    10c8:	2f 91       	pop	r18
    10ca:	0f 90       	pop	r0
    10cc:	0b be       	out	0x3b, r0	; 59
    10ce:	0f 90       	pop	r0
    10d0:	0f be       	out	0x3f, r0	; 63
    10d2:	0f 90       	pop	r0
    10d4:	1f 90       	pop	r1
    10d6:	18 95       	reti

000010d8 <_ZN5Wheel9getSensorEv>:
    10d8:	80 91 61 02 	lds	r24, 0x0261
    10dc:	08 95       	ret

000010de <_ZN5Wheel8setSpeedEi>:
    10de:	90 93 4b 02 	sts	0x024B, r25
    10e2:	80 93 4a 02 	sts	0x024A, r24
    10e6:	08 95       	ret

000010e8 <_ZN5Wheel4moveENS_8_commandE>:
    10e8:	cf 93       	push	r28
    10ea:	c8 2f       	mov	r28, r24
    10ec:	81 11       	cpse	r24, r1
    10ee:	06 c0       	rjmp	.+12     	; 0x10fc <_ZN5Wheel4moveENS_8_commandE+0x14>
    10f0:	83 e0       	ldi	r24, 0x03	; 3
    10f2:	80 93 b0 00 	sts	0x00B0, r24
    10f6:	80 e8       	ldi	r24, 0x80	; 128
    10f8:	03 dd       	rcall	.-1530   	; 0xb00 <_ZN2LL16backMotorControlEc>
    10fa:	07 c0       	rjmp	.+14     	; 0x110a <_ZN5Wheel4moveENS_8_commandE+0x22>
    10fc:	83 70       	andi	r24, 0x03	; 3
    10fe:	84 68       	ori	r24, 0x84	; 132
    1100:	ff dc       	rcall	.-1538   	; 0xb00 <_ZN2LL16backMotorControlEc>
    1102:	c0 7f       	andi	r28, 0xF0	; 240
    1104:	c3 60       	ori	r28, 0x03	; 3
    1106:	c0 93 b0 00 	sts	0x00B0, r28
    110a:	cf 91       	pop	r28
    110c:	08 95       	ret

0000110e <_ZN12_GLOBAL__N_112UsrCountTask4taskEv>:
    110e:	cf 93       	push	r28
    1110:	df 93       	push	r29
    1112:	ec 01       	movw	r28, r24
    1114:	88 85       	ldd	r24, Y+8	; 0x08
    1116:	88 23       	and	r24, r24
    1118:	81 f0       	breq	.+32     	; 0x113a <_ZN12_GLOBAL__N_112UsrCountTask4taskEv+0x2c>
    111a:	10 92 31 02 	sts	0x0231, r1
    111e:	10 92 30 02 	sts	0x0230, r1
    1122:	10 92 33 02 	sts	0x0233, r1
    1126:	10 92 32 02 	sts	0x0232, r1
    112a:	86 b5       	in	r24, 0x26	; 38
    112c:	80 93 35 02 	sts	0x0235, r24
    1130:	80 91 84 00 	lds	r24, 0x0084
    1134:	80 93 34 02 	sts	0x0234, r24
    1138:	18 86       	std	Y+8, r1	; 0x08
    113a:	1f 82       	std	Y+7, r1	; 0x07
    113c:	89 85       	ldd	r24, Y+9	; 0x09
    113e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1140:	8a 30       	cpi	r24, 0x0A	; 10
    1142:	91 05       	cpc	r25, r1
    1144:	60 f4       	brcc	.+24     	; 0x115e <_ZN12_GLOBAL__N_112UsrCountTask4taskEv+0x50>
    1146:	80 e3       	ldi	r24, 0x30	; 48
    1148:	8c 83       	std	Y+4, r24	; 0x04
    114a:	8d 83       	std	Y+5, r24	; 0x05
    114c:	80 91 79 00 	lds	r24, 0x0079
    1150:	4a e0       	ldi	r20, 0x0A	; 10
    1152:	be 01       	movw	r22, r28
    1154:	6a 5f       	subi	r22, 0xFA	; 250
    1156:	7f 4f       	sbci	r23, 0xFF	; 255
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	ed d2       	rcall	.+1498   	; 0x1736 <__itoa_ncheck>
    115c:	16 c0       	rjmp	.+44     	; 0x118a <_ZN12_GLOBAL__N_112UsrCountTask4taskEv+0x7c>
    115e:	84 36       	cpi	r24, 0x64	; 100
    1160:	91 05       	cpc	r25, r1
    1162:	58 f4       	brcc	.+22     	; 0x117a <_ZN12_GLOBAL__N_112UsrCountTask4taskEv+0x6c>
    1164:	80 e3       	ldi	r24, 0x30	; 48
    1166:	8c 83       	std	Y+4, r24	; 0x04
    1168:	80 91 79 00 	lds	r24, 0x0079
    116c:	4a e0       	ldi	r20, 0x0A	; 10
    116e:	be 01       	movw	r22, r28
    1170:	6b 5f       	subi	r22, 0xFB	; 251
    1172:	7f 4f       	sbci	r23, 0xFF	; 255
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	df d2       	rcall	.+1470   	; 0x1736 <__itoa_ncheck>
    1178:	08 c0       	rjmp	.+16     	; 0x118a <_ZN12_GLOBAL__N_112UsrCountTask4taskEv+0x7c>
    117a:	80 91 79 00 	lds	r24, 0x0079
    117e:	4a e0       	ldi	r20, 0x0A	; 10
    1180:	be 01       	movw	r22, r28
    1182:	6c 5f       	subi	r22, 0xFC	; 252
    1184:	7f 4f       	sbci	r23, 0xFF	; 255
    1186:	90 e0       	ldi	r25, 0x00	; 0
    1188:	d6 d2       	rcall	.+1452   	; 0x1736 <__itoa_ncheck>
    118a:	be 01       	movw	r22, r28
    118c:	6c 5f       	subi	r22, 0xFC	; 252
    118e:	7f 4f       	sbci	r23, 0xFF	; 255
    1190:	80 e0       	ldi	r24, 0x00	; 0
    1192:	8e db       	rcall	.-2276   	; 0x8b0 <_ZN3LCD5printEhPc>
    1194:	56 b5       	in	r21, 0x26	; 38
    1196:	40 91 84 00 	lds	r20, 0x0084
    119a:	20 91 30 02 	lds	r18, 0x0230
    119e:	30 91 31 02 	lds	r19, 0x0231
    11a2:	80 91 32 02 	lds	r24, 0x0232
    11a6:	90 91 33 02 	lds	r25, 0x0233
    11aa:	28 0f       	add	r18, r24
    11ac:	39 1f       	adc	r19, r25
    11ae:	25 0f       	add	r18, r21
    11b0:	31 1d       	adc	r19, r1
    11b2:	24 0f       	add	r18, r20
    11b4:	31 1d       	adc	r19, r1
    11b6:	80 91 35 02 	lds	r24, 0x0235
    11ba:	28 1b       	sub	r18, r24
    11bc:	31 09       	sbc	r19, r1
    11be:	80 91 34 02 	lds	r24, 0x0234
    11c2:	28 1b       	sub	r18, r24
    11c4:	31 09       	sbc	r19, r1
    11c6:	89 85       	ldd	r24, Y+9	; 0x09
    11c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    11ca:	28 17       	cp	r18, r24
    11cc:	39 07       	cpc	r19, r25
    11ce:	18 f4       	brcc	.+6      	; 0x11d6 <_ZN12_GLOBAL__N_112UsrCountTask4taskEv+0xc8>
    11d0:	ce 01       	movw	r24, r28
    11d2:	35 d1       	rcall	.+618    	; 0x143e <_Z9kerAppendR4Task>
    11d4:	02 c0       	rjmp	.+4      	; 0x11da <_ZN12_GLOBAL__N_112UsrCountTask4taskEv+0xcc>
    11d6:	80 e0       	ldi	r24, 0x00	; 0
    11d8:	87 df       	rcall	.-242    	; 0x10e8 <_ZN5Wheel4moveENS_8_commandE>
    11da:	df 91       	pop	r29
    11dc:	cf 91       	pop	r28
    11de:	08 95       	ret

000011e0 <_ZN5Wheel4setPEi>:
    11e0:	90 93 59 02 	sts	0x0259, r25
    11e4:	80 93 58 02 	sts	0x0258, r24
    11e8:	08 95       	ret

000011ea <_ZN5Wheel4setIEi>:
    11ea:	90 93 5b 02 	sts	0x025B, r25
    11ee:	80 93 5a 02 	sts	0x025A, r24
    11f2:	08 95       	ret

000011f4 <_ZN5Wheel4setDEi>:
    11f4:	90 93 5d 02 	sts	0x025D, r25
    11f8:	80 93 5c 02 	sts	0x025C, r24
    11fc:	08 95       	ret

000011fe <_GLOBAL__sub_I___vector_11>:
		setD(d);
	}
	
	
	
}
    11fe:	cf 93       	push	r28
    1200:	df 93       	push	r29
    1202:	8a e3       	ldi	r24, 0x3A	; 58
    1204:	92 e0       	ldi	r25, 0x02	; 2
    1206:	46 d0       	rcall	.+140    	; 0x1294 <_ZN7ElementC1Ev>
    class Timer2: public Task  {
        public:
			unsigned char L_speed_limit, R_speed_limit;
            unsigned char L_isr, R_isr, L_last, R_last, L_speed, R_speed;
            unsigned int L_count, R_count,speed;
            Timer2(void) {
    1208:	c8 e3       	ldi	r28, 0x38	; 56
    120a:	d2 e0       	ldi	r29, 0x02	; 2
    120c:	88 e5       	ldi	r24, 0x58	; 88
    120e:	91 e0       	ldi	r25, 0x01	; 1
    1210:	99 83       	std	Y+1, r25	; 0x01
    1212:	88 83       	st	Y, r24
    enum _TCCR2A {	A_CON = 0b10000011, B_CON = 0b00100011, DISCON = 0b11};
	
	class PIDcontrol {
	public:
		PIDcontrol(void){
			iTerm = lastInput = 0;	
    1214:	1f 8a       	std	Y+23, r1	; 0x17
    1216:	1e 8a       	std	Y+22, r1	; 0x16
    1218:	1d 8a       	std	Y+21, r1	; 0x15
    121a:	1c 8a       	std	Y+20, r1	; 0x14
    121c:	1b 8e       	std	Y+27, r1	; 0x1b
    121e:	1a 8e       	std	Y+26, r1	; 0x1a
    1220:	19 8e       	std	Y+25, r1	; 0x19
    1222:	18 8e       	std	Y+24, r1	; 0x18
    1224:	1f 8e       	std	Y+31, r1	; 0x1f
    1226:	1e 8e       	std	Y+30, r1	; 0x1e
    1228:	1d 8e       	std	Y+29, r1	; 0x1d
    122a:	1c 8e       	std	Y+28, r1	; 0x1c
        public:
			unsigned char L_speed_limit, R_speed_limit;
            unsigned char L_isr, R_isr, L_last, R_last, L_speed, R_speed;
            unsigned int L_count, R_count,speed;
            Timer2(void) {
                DDRD |= _BV(7);
    122c:	57 9a       	sbi	0x0a, 7	; 10
                DDRD |= _BV(6);
    122e:	56 9a       	sbi	0x0a, 6	; 10
                TCCR2A = DISCON;
    1230:	e0 eb       	ldi	r30, 0xB0	; 176
    1232:	f0 e0       	ldi	r31, 0x00	; 0
    1234:	93 e0       	ldi	r25, 0x03	; 3
    1236:	90 83       	st	Z, r25
                TCCR2B = 0b111;
    1238:	87 e0       	ldi	r24, 0x07	; 7
    123a:	80 93 b1 00 	sts	0x00B1, r24
                TCCR0B = TCCR1B = 7;
    123e:	80 93 81 00 	sts	0x0081, r24
    1242:	85 bd       	out	0x25, r24	; 37
                ASSR &= ~_BV(AS2);
    1244:	a6 eb       	ldi	r26, 0xB6	; 182
    1246:	b0 e0       	ldi	r27, 0x00	; 0
    1248:	8c 91       	ld	r24, X
    124a:	8f 7d       	andi	r24, 0xDF	; 223
    124c:	8c 93       	st	X, r24
				kI = 20;
				kD = 10;*/
            }
            void move(unsigned char command) {
                if (command == Wheel::STOP) {
                    TCCR2A = DISCON;
    124e:	90 83       	st	Z, r25
                    LL::backMotorControl(ON);
    1250:	80 e8       	ldi	r24, 0x80	; 128
    1252:	56 dc       	rcall	.-1876   	; 0xb00 <_ZN2LL16backMotorControlEc>
                TCCR2A = DISCON;
                TCCR2B = 0b111;
                TCCR0B = TCCR1B = 7;
                ASSR &= ~_BV(AS2);
                move(Wheel::STOP);
                L_OCR = R_OCR = 128;
    1254:	80 e8       	ldi	r24, 0x80	; 128
    1256:	80 93 b4 00 	sts	0x00B4, r24
    125a:	80 93 b3 00 	sts	0x00B3, r24
				choosesensor=0;
    125e:	1f a2       	std	Y+39, r1	; 0x27
    1260:	1e a2       	std	Y+38, r1	; 0x26
                TIMSK2 |= _BV(TOIE2);	// enable overflow interrupt
    1262:	e0 e7       	ldi	r30, 0x70	; 112
    1264:	f0 e0       	ldi	r31, 0x00	; 0
    1266:	80 81       	ld	r24, Z
    1268:	81 60       	ori	r24, 0x01	; 1
    126a:	80 83       	st	Z, r24
				speed=85;
    126c:	85 e5       	ldi	r24, 0x55	; 85
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	99 8b       	std	Y+17, r25	; 0x11
    1272:	88 8b       	std	Y+16, r24	; 0x10
				trackspeed = 5;
    1274:	85 e0       	ldi	r24, 0x05	; 5
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	9b 8b       	std	Y+19, r25	; 0x13
    127a:	8a 8b       	std	Y+18, r24	; 0x12
    127c:	87 e2       	ldi	r24, 0x27	; 39
    127e:	92 e0       	ldi	r25, 0x02	; 2
    1280:	09 d0       	rcall	.+18     	; 0x1294 <_ZN7ElementC1Ev>

    }	timer2;
	
		 unsigned char L_isr, R_isr, L_last, R_last, L_speed, R_speed;
		 unsigned int L_count, R_count;
		 class UsrCountTask :public Task{
    1282:	8e e5       	ldi	r24, 0x5E	; 94
    1284:	91 e0       	ldi	r25, 0x01	; 1
    1286:	90 93 26 02 	sts	0x0226, r25
    128a:	80 93 25 02 	sts	0x0225, r24
		setD(d);
	}
	
	
	
}
    128e:	df 91       	pop	r29
    1290:	cf 91       	pop	r28
    1292:	08 95       	ret

00001294 <_ZN7ElementC1Ev>:
    1294:	fc 01       	movw	r30, r24
    1296:	91 83       	std	Z+1, r25	; 0x01
    1298:	80 83       	st	Z, r24
    129a:	08 95       	ret

0000129c <_ZN4ListC1Ev>:
    129c:	cf 93       	push	r28
    129e:	df 93       	push	r29
    12a0:	ec 01       	movw	r28, r24
    12a2:	f8 df       	rcall	.-16     	; 0x1294 <_ZN7ElementC1Ev>
    12a4:	db 83       	std	Y+3, r29	; 0x03
    12a6:	ca 83       	std	Y+2, r28	; 0x02
    12a8:	df 91       	pop	r29
    12aa:	cf 91       	pop	r28
    12ac:	08 95       	ret

000012ae <_ZN4List7getNextEP7Element>:
    12ae:	61 15       	cp	r22, r1
    12b0:	71 05       	cpc	r23, r1
    12b2:	09 f4       	brne	.+2      	; 0x12b6 <_ZN4List7getNextEP7Element+0x8>
    12b4:	bc 01       	movw	r22, r24
    12b6:	fb 01       	movw	r30, r22
    12b8:	20 81       	ld	r18, Z
    12ba:	31 81       	ldd	r19, Z+1	; 0x01
    12bc:	28 17       	cp	r18, r24
    12be:	39 07       	cpc	r19, r25
    12c0:	19 f4       	brne	.+6      	; 0x12c8 <_ZN4List7getNextEP7Element+0x1a>
    12c2:	80 e0       	ldi	r24, 0x00	; 0
    12c4:	90 e0       	ldi	r25, 0x00	; 0
    12c6:	08 95       	ret
    12c8:	82 2f       	mov	r24, r18
    12ca:	93 2f       	mov	r25, r19
    12cc:	08 95       	ret

000012ce <_ZN4List4pushER7Element>:
    12ce:	fc 01       	movw	r30, r24
    12d0:	80 81       	ld	r24, Z
    12d2:	91 81       	ldd	r25, Z+1	; 0x01
    12d4:	e8 17       	cp	r30, r24
    12d6:	f9 07       	cpc	r31, r25
    12d8:	11 f4       	brne	.+4      	; 0x12de <_ZN4List4pushER7Element+0x10>
    12da:	73 83       	std	Z+3, r23	; 0x03
    12dc:	62 83       	std	Z+2, r22	; 0x02
    12de:	db 01       	movw	r26, r22
    12e0:	8d 93       	st	X+, r24
    12e2:	9c 93       	st	X, r25
    12e4:	71 83       	std	Z+1, r23	; 0x01
    12e6:	60 83       	st	Z, r22
    12e8:	08 95       	ret

000012ea <_ZN4List6appendER7Element>:
    12ea:	dc 01       	movw	r26, r24
    12ec:	12 96       	adiw	r26, 0x02	; 2
    12ee:	ed 91       	ld	r30, X+
    12f0:	fc 91       	ld	r31, X
    12f2:	13 97       	sbiw	r26, 0x03	; 3
    12f4:	71 83       	std	Z+1, r23	; 0x01
    12f6:	60 83       	st	Z, r22
    12f8:	13 96       	adiw	r26, 0x03	; 3
    12fa:	7c 93       	st	X, r23
    12fc:	6e 93       	st	-X, r22
    12fe:	12 97       	sbiw	r26, 0x02	; 2
    1300:	fb 01       	movw	r30, r22
    1302:	91 83       	std	Z+1, r25	; 0x01
    1304:	80 83       	st	Z, r24
    1306:	08 95       	ret

00001308 <_ZN4List3popEv>:
    1308:	dc 01       	movw	r26, r24
    130a:	ed 91       	ld	r30, X+
    130c:	fc 91       	ld	r31, X
    130e:	11 97       	sbiw	r26, 0x01	; 1
    1310:	8e 17       	cp	r24, r30
    1312:	9f 07       	cpc	r25, r31
    1314:	79 f0       	breq	.+30     	; 0x1334 <_ZN4List3popEv+0x2c>
    1316:	80 81       	ld	r24, Z
    1318:	91 81       	ldd	r25, Z+1	; 0x01
    131a:	11 96       	adiw	r26, 0x01	; 1
    131c:	9c 93       	st	X, r25
    131e:	8e 93       	st	-X, r24
    1320:	8a 17       	cp	r24, r26
    1322:	9b 07       	cpc	r25, r27
    1324:	21 f4       	brne	.+8      	; 0x132e <_ZN4List3popEv+0x26>
    1326:	13 96       	adiw	r26, 0x03	; 3
    1328:	9c 93       	st	X, r25
    132a:	8e 93       	st	-X, r24
    132c:	12 97       	sbiw	r26, 0x02	; 2
    132e:	f1 83       	std	Z+1, r31	; 0x01
    1330:	e0 83       	st	Z, r30
    1332:	02 c0       	rjmp	.+4      	; 0x1338 <_ZN4List3popEv+0x30>
    1334:	e0 e0       	ldi	r30, 0x00	; 0
    1336:	f0 e0       	ldi	r31, 0x00	; 0
    1338:	cf 01       	movw	r24, r30
    133a:	08 95       	ret

0000133c <_ZN4List6removeER7Element>:
    133c:	cf 93       	push	r28
    133e:	df 93       	push	r29
    1340:	ac 01       	movw	r20, r24
    1342:	fc 01       	movw	r30, r24
    1344:	17 c0       	rjmp	.+46     	; 0x1374 <_ZN4List6removeER7Element+0x38>
    1346:	26 17       	cp	r18, r22
    1348:	37 07       	cpc	r19, r23
    134a:	99 f4       	brne	.+38     	; 0x1372 <_ZN4List6removeER7Element+0x36>
    134c:	df 01       	movw	r26, r30
    134e:	ec 01       	movw	r28, r24
    1350:	2a 81       	ldd	r18, Y+2	; 0x02
    1352:	3b 81       	ldd	r19, Y+3	; 0x03
    1354:	26 17       	cp	r18, r22
    1356:	37 07       	cpc	r19, r23
    1358:	11 f4       	brne	.+4      	; 0x135e <_ZN4List6removeER7Element+0x22>
    135a:	fb 83       	std	Y+3, r31	; 0x03
    135c:	ea 83       	std	Y+2, r30	; 0x02
    135e:	eb 01       	movw	r28, r22
    1360:	88 81       	ld	r24, Y
    1362:	99 81       	ldd	r25, Y+1	; 0x01
    1364:	8d 93       	st	X+, r24
    1366:	9c 93       	st	X, r25
    1368:	79 83       	std	Y+1, r23	; 0x01
    136a:	68 83       	st	Y, r22
    136c:	8e 2f       	mov	r24, r30
    136e:	9f 2f       	mov	r25, r31
    1370:	08 c0       	rjmp	.+16     	; 0x1382 <_ZN4List6removeER7Element+0x46>
    1372:	f9 01       	movw	r30, r18
    1374:	20 81       	ld	r18, Z
    1376:	31 81       	ldd	r19, Z+1	; 0x01
    1378:	42 17       	cp	r20, r18
    137a:	53 07       	cpc	r21, r19
    137c:	21 f7       	brne	.-56     	; 0x1346 <_ZN4List6removeER7Element+0xa>
    137e:	80 e0       	ldi	r24, 0x00	; 0
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	df 91       	pop	r29
    1384:	cf 91       	pop	r28
    1386:	08 95       	ret

00001388 <_ZN5QueueC1EPS_>:
    1388:	0f 93       	push	r16
    138a:	1f 93       	push	r17
    138c:	cf 93       	push	r28
    138e:	df 93       	push	r29
    1390:	ec 01       	movw	r28, r24
    1392:	8b 01       	movw	r16, r22
    1394:	83 df       	rcall	.-250    	; 0x129c <_ZN4ListC1Ev>
    1396:	1d 83       	std	Y+5, r17	; 0x05
    1398:	0c 83       	std	Y+4, r16	; 0x04
    139a:	1e 82       	std	Y+6, r1	; 0x06
    139c:	df 91       	pop	r29
    139e:	cf 91       	pop	r28
    13a0:	1f 91       	pop	r17
    13a2:	0f 91       	pop	r16
    13a4:	08 95       	ret

000013a6 <_ZN5Queue6appendER4Task>:
    13a6:	fc 01       	movw	r30, r24
    13a8:	26 81       	ldd	r18, Z+6	; 0x06
    13aa:	22 23       	and	r18, r18
    13ac:	31 f0       	breq	.+12     	; 0x13ba <_ZN5Queue6appendER4Task+0x14>
    13ae:	6e 5f       	subi	r22, 0xFE	; 254
    13b0:	7f 4f       	sbci	r23, 0xFF	; 255
    13b2:	8a e6       	ldi	r24, 0x6A	; 106
    13b4:	92 e0       	ldi	r25, 0x02	; 2
    13b6:	8b cf       	rjmp	.-234    	; 0x12ce <_ZN4List4pushER7Element>
    13b8:	08 95       	ret
    13ba:	6e 5f       	subi	r22, 0xFE	; 254
    13bc:	7f 4f       	sbci	r23, 0xFF	; 255
    13be:	95 cf       	rjmp	.-214    	; 0x12ea <_ZN4List6appendER7Element>
    13c0:	08 95       	ret

000013c2 <_ZN5Queue3popEv>:
    13c2:	cf 93       	push	r28
    13c4:	df 93       	push	r29
    13c6:	ec 01       	movw	r28, r24
    13c8:	81 e0       	ldi	r24, 0x01	; 1
    13ca:	8e 83       	std	Y+6, r24	; 0x06
    13cc:	ce 01       	movw	r24, r28
    13ce:	9c df       	rcall	.-200    	; 0x1308 <_ZN4List3popEv>
    13d0:	00 97       	sbiw	r24, 0x00	; 0
    13d2:	11 f0       	breq	.+4      	; 0x13d8 <_ZN5Queue3popEv+0x16>
    13d4:	02 97       	sbiw	r24, 0x02	; 2
    13d6:	02 c0       	rjmp	.+4      	; 0x13dc <_ZN5Queue3popEv+0x1a>
    13d8:	80 e0       	ldi	r24, 0x00	; 0
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	1e 82       	std	Y+6, r1	; 0x06
    13de:	df 91       	pop	r29
    13e0:	cf 91       	pop	r28
    13e2:	08 95       	ret

000013e4 <_Z9isrAppendR4Task>:
    13e4:	0f 93       	push	r16
    13e6:	1f 93       	push	r17
    13e8:	cf 93       	push	r28
    13ea:	df 93       	push	r29
    13ec:	bc 01       	movw	r22, r24
    13ee:	83 e6       	ldi	r24, 0x63	; 99
    13f0:	92 e0       	ldi	r25, 0x02	; 2
    13f2:	d9 df       	rcall	.-78     	; 0x13a6 <_ZN5Queue6appendER4Task>
    13f4:	80 91 62 02 	lds	r24, 0x0262
    13f8:	81 11       	cpse	r24, r1
    13fa:	1c c0       	rjmp	.+56     	; 0x1434 <_Z9isrAppendR4Task+0x50>
    13fc:	81 e0       	ldi	r24, 0x01	; 1
    13fe:	80 93 62 02 	sts	0x0262, r24
    1402:	78 94       	sei
    1404:	c3 e6       	ldi	r28, 0x63	; 99
    1406:	d2 e0       	ldi	r29, 0x02	; 2
    1408:	8e 01       	movw	r16, r28
    140a:	ce 01       	movw	r24, r28
    140c:	da df       	rcall	.-76     	; 0x13c2 <_ZN5Queue3popEv>
    140e:	00 97       	sbiw	r24, 0x00	; 0
    1410:	49 f0       	breq	.+18     	; 0x1424 <_Z9isrAppendR4Task+0x40>
    1412:	dc 01       	movw	r26, r24
    1414:	ed 91       	ld	r30, X+
    1416:	fc 91       	ld	r31, X
    1418:	01 90       	ld	r0, Z+
    141a:	f0 81       	ld	r31, Z
    141c:	e0 2d       	mov	r30, r0
    141e:	09 95       	icall
    1420:	e8 01       	movw	r28, r16
    1422:	f3 cf       	rjmp	.-26     	; 0x140a <_Z9isrAppendR4Task+0x26>
    1424:	0c 80       	ldd	r0, Y+4	; 0x04
    1426:	dd 81       	ldd	r29, Y+5	; 0x05
    1428:	c0 2d       	mov	r28, r0
    142a:	20 97       	sbiw	r28, 0x00	; 0
    142c:	71 f7       	brne	.-36     	; 0x140a <_Z9isrAppendR4Task+0x26>
    142e:	f8 94       	cli
    1430:	10 92 62 02 	sts	0x0262, r1
    1434:	df 91       	pop	r29
    1436:	cf 91       	pop	r28
    1438:	1f 91       	pop	r17
    143a:	0f 91       	pop	r16
    143c:	08 95       	ret

0000143e <_Z9kerAppendR4Task>:
    143e:	bc 01       	movw	r22, r24
    1440:	8a e6       	ldi	r24, 0x6A	; 106
    1442:	92 e0       	ldi	r25, 0x02	; 2
    1444:	b0 cf       	rjmp	.-160    	; 0x13a6 <_ZN5Queue6appendER4Task>
    1446:	08 95       	ret

00001448 <_GLOBAL__sub_I__Z5__seiv>:
    1448:	60 e0       	ldi	r22, 0x00	; 0
    144a:	70 e0       	ldi	r23, 0x00	; 0
    144c:	8a e6       	ldi	r24, 0x6A	; 106
    144e:	92 e0       	ldi	r25, 0x02	; 2
    1450:	9b df       	rcall	.-202    	; 0x1388 <_ZN5QueueC1EPS_>
    1452:	6a e6       	ldi	r22, 0x6A	; 106
    1454:	72 e0       	ldi	r23, 0x02	; 2
    1456:	83 e6       	ldi	r24, 0x63	; 99
    1458:	92 e0       	ldi	r25, 0x02	; 2
    145a:	96 cf       	rjmp	.-212    	; 0x1388 <_ZN5QueueC1EPS_>
    145c:	08 95       	ret

0000145e <__divmodhi4>:
    145e:	97 fb       	bst	r25, 7
    1460:	07 2e       	mov	r0, r23
    1462:	16 f4       	brtc	.+4      	; 0x1468 <__divmodhi4+0xa>
    1464:	00 94       	com	r0
    1466:	06 d0       	rcall	.+12     	; 0x1474 <__divmodhi4_neg1>
    1468:	77 fd       	sbrc	r23, 7
    146a:	08 d0       	rcall	.+16     	; 0x147c <__divmodhi4_neg2>
    146c:	1a d0       	rcall	.+52     	; 0x14a2 <__udivmodhi4>
    146e:	07 fc       	sbrc	r0, 7
    1470:	05 d0       	rcall	.+10     	; 0x147c <__divmodhi4_neg2>
    1472:	3e f4       	brtc	.+14     	; 0x1482 <__divmodhi4_exit>

00001474 <__divmodhi4_neg1>:
    1474:	90 95       	com	r25
    1476:	81 95       	neg	r24
    1478:	9f 4f       	sbci	r25, 0xFF	; 255
    147a:	08 95       	ret

0000147c <__divmodhi4_neg2>:
    147c:	70 95       	com	r23
    147e:	61 95       	neg	r22
    1480:	7f 4f       	sbci	r23, 0xFF	; 255

00001482 <__divmodhi4_exit>:
    1482:	08 95       	ret

00001484 <__umulhisi3>:
    1484:	a2 9f       	mul	r26, r18
    1486:	b0 01       	movw	r22, r0
    1488:	b3 9f       	mul	r27, r19
    148a:	c0 01       	movw	r24, r0
    148c:	a3 9f       	mul	r26, r19
    148e:	70 0d       	add	r23, r0
    1490:	81 1d       	adc	r24, r1
    1492:	11 24       	eor	r1, r1
    1494:	91 1d       	adc	r25, r1
    1496:	b2 9f       	mul	r27, r18
    1498:	70 0d       	add	r23, r0
    149a:	81 1d       	adc	r24, r1
    149c:	11 24       	eor	r1, r1
    149e:	91 1d       	adc	r25, r1
    14a0:	08 95       	ret

000014a2 <__udivmodhi4>:
    14a2:	aa 1b       	sub	r26, r26
    14a4:	bb 1b       	sub	r27, r27
    14a6:	51 e1       	ldi	r21, 0x11	; 17
    14a8:	07 c0       	rjmp	.+14     	; 0x14b8 <__udivmodhi4_ep>

000014aa <__udivmodhi4_loop>:
    14aa:	aa 1f       	adc	r26, r26
    14ac:	bb 1f       	adc	r27, r27
    14ae:	a6 17       	cp	r26, r22
    14b0:	b7 07       	cpc	r27, r23
    14b2:	10 f0       	brcs	.+4      	; 0x14b8 <__udivmodhi4_ep>
    14b4:	a6 1b       	sub	r26, r22
    14b6:	b7 0b       	sbc	r27, r23

000014b8 <__udivmodhi4_ep>:
    14b8:	88 1f       	adc	r24, r24
    14ba:	99 1f       	adc	r25, r25
    14bc:	5a 95       	dec	r21
    14be:	a9 f7       	brne	.-22     	; 0x14aa <__udivmodhi4_loop>
    14c0:	80 95       	com	r24
    14c2:	90 95       	com	r25
    14c4:	bc 01       	movw	r22, r24
    14c6:	cd 01       	movw	r24, r26
    14c8:	08 95       	ret

000014ca <__tablejump2__>:
    14ca:	ee 0f       	add	r30, r30
    14cc:	ff 1f       	adc	r31, r31
    14ce:	00 24       	eor	r0, r0
    14d0:	00 1c       	adc	r0, r0
    14d2:	0b be       	out	0x3b, r0	; 59
    14d4:	07 90       	elpm	r0, Z+
    14d6:	f6 91       	elpm	r31, Z
    14d8:	e0 2d       	mov	r30, r0
    14da:	09 94       	ijmp

000014dc <malloc>:
    14dc:	cf 93       	push	r28
    14de:	df 93       	push	r29
    14e0:	82 30       	cpi	r24, 0x02	; 2
    14e2:	91 05       	cpc	r25, r1
    14e4:	10 f4       	brcc	.+4      	; 0x14ea <malloc+0xe>
    14e6:	82 e0       	ldi	r24, 0x02	; 2
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	e0 91 73 02 	lds	r30, 0x0273
    14ee:	f0 91 74 02 	lds	r31, 0x0274
    14f2:	20 e0       	ldi	r18, 0x00	; 0
    14f4:	30 e0       	ldi	r19, 0x00	; 0
    14f6:	c0 e0       	ldi	r28, 0x00	; 0
    14f8:	d0 e0       	ldi	r29, 0x00	; 0
    14fa:	30 97       	sbiw	r30, 0x00	; 0
    14fc:	11 f1       	breq	.+68     	; 0x1542 <malloc+0x66>
    14fe:	40 81       	ld	r20, Z
    1500:	51 81       	ldd	r21, Z+1	; 0x01
    1502:	48 17       	cp	r20, r24
    1504:	59 07       	cpc	r21, r25
    1506:	c0 f0       	brcs	.+48     	; 0x1538 <malloc+0x5c>
    1508:	48 17       	cp	r20, r24
    150a:	59 07       	cpc	r21, r25
    150c:	61 f4       	brne	.+24     	; 0x1526 <malloc+0x4a>
    150e:	82 81       	ldd	r24, Z+2	; 0x02
    1510:	93 81       	ldd	r25, Z+3	; 0x03
    1512:	20 97       	sbiw	r28, 0x00	; 0
    1514:	19 f0       	breq	.+6      	; 0x151c <malloc+0x40>
    1516:	9b 83       	std	Y+3, r25	; 0x03
    1518:	8a 83       	std	Y+2, r24	; 0x02
    151a:	2b c0       	rjmp	.+86     	; 0x1572 <malloc+0x96>
    151c:	90 93 74 02 	sts	0x0274, r25
    1520:	80 93 73 02 	sts	0x0273, r24
    1524:	26 c0       	rjmp	.+76     	; 0x1572 <malloc+0x96>
    1526:	21 15       	cp	r18, r1
    1528:	31 05       	cpc	r19, r1
    152a:	19 f0       	breq	.+6      	; 0x1532 <malloc+0x56>
    152c:	42 17       	cp	r20, r18
    152e:	53 07       	cpc	r21, r19
    1530:	18 f4       	brcc	.+6      	; 0x1538 <malloc+0x5c>
    1532:	9a 01       	movw	r18, r20
    1534:	be 01       	movw	r22, r28
    1536:	df 01       	movw	r26, r30
    1538:	ef 01       	movw	r28, r30
    153a:	02 80       	ldd	r0, Z+2	; 0x02
    153c:	f3 81       	ldd	r31, Z+3	; 0x03
    153e:	e0 2d       	mov	r30, r0
    1540:	dc cf       	rjmp	.-72     	; 0x14fa <malloc+0x1e>
    1542:	21 15       	cp	r18, r1
    1544:	31 05       	cpc	r19, r1
    1546:	09 f1       	breq	.+66     	; 0x158a <malloc+0xae>
    1548:	28 1b       	sub	r18, r24
    154a:	39 0b       	sbc	r19, r25
    154c:	24 30       	cpi	r18, 0x04	; 4
    154e:	31 05       	cpc	r19, r1
    1550:	90 f4       	brcc	.+36     	; 0x1576 <malloc+0x9a>
    1552:	12 96       	adiw	r26, 0x02	; 2
    1554:	8d 91       	ld	r24, X+
    1556:	9c 91       	ld	r25, X
    1558:	13 97       	sbiw	r26, 0x03	; 3
    155a:	61 15       	cp	r22, r1
    155c:	71 05       	cpc	r23, r1
    155e:	21 f0       	breq	.+8      	; 0x1568 <malloc+0x8c>
    1560:	fb 01       	movw	r30, r22
    1562:	93 83       	std	Z+3, r25	; 0x03
    1564:	82 83       	std	Z+2, r24	; 0x02
    1566:	04 c0       	rjmp	.+8      	; 0x1570 <malloc+0x94>
    1568:	90 93 74 02 	sts	0x0274, r25
    156c:	80 93 73 02 	sts	0x0273, r24
    1570:	fd 01       	movw	r30, r26
    1572:	32 96       	adiw	r30, 0x02	; 2
    1574:	44 c0       	rjmp	.+136    	; 0x15fe <malloc+0x122>
    1576:	fd 01       	movw	r30, r26
    1578:	e2 0f       	add	r30, r18
    157a:	f3 1f       	adc	r31, r19
    157c:	81 93       	st	Z+, r24
    157e:	91 93       	st	Z+, r25
    1580:	22 50       	subi	r18, 0x02	; 2
    1582:	31 09       	sbc	r19, r1
    1584:	2d 93       	st	X+, r18
    1586:	3c 93       	st	X, r19
    1588:	3a c0       	rjmp	.+116    	; 0x15fe <malloc+0x122>
    158a:	20 91 71 02 	lds	r18, 0x0271
    158e:	30 91 72 02 	lds	r19, 0x0272
    1592:	23 2b       	or	r18, r19
    1594:	41 f4       	brne	.+16     	; 0x15a6 <malloc+0xca>
    1596:	20 91 02 01 	lds	r18, 0x0102
    159a:	30 91 03 01 	lds	r19, 0x0103
    159e:	30 93 72 02 	sts	0x0272, r19
    15a2:	20 93 71 02 	sts	0x0271, r18
    15a6:	20 91 00 01 	lds	r18, 0x0100
    15aa:	30 91 01 01 	lds	r19, 0x0101
    15ae:	21 15       	cp	r18, r1
    15b0:	31 05       	cpc	r19, r1
    15b2:	41 f4       	brne	.+16     	; 0x15c4 <malloc+0xe8>
    15b4:	2d b7       	in	r18, 0x3d	; 61
    15b6:	3e b7       	in	r19, 0x3e	; 62
    15b8:	40 91 04 01 	lds	r20, 0x0104
    15bc:	50 91 05 01 	lds	r21, 0x0105
    15c0:	24 1b       	sub	r18, r20
    15c2:	35 0b       	sbc	r19, r21
    15c4:	e0 91 71 02 	lds	r30, 0x0271
    15c8:	f0 91 72 02 	lds	r31, 0x0272
    15cc:	e2 17       	cp	r30, r18
    15ce:	f3 07       	cpc	r31, r19
    15d0:	a0 f4       	brcc	.+40     	; 0x15fa <malloc+0x11e>
    15d2:	2e 1b       	sub	r18, r30
    15d4:	3f 0b       	sbc	r19, r31
    15d6:	28 17       	cp	r18, r24
    15d8:	39 07       	cpc	r19, r25
    15da:	78 f0       	brcs	.+30     	; 0x15fa <malloc+0x11e>
    15dc:	ac 01       	movw	r20, r24
    15de:	4e 5f       	subi	r20, 0xFE	; 254
    15e0:	5f 4f       	sbci	r21, 0xFF	; 255
    15e2:	24 17       	cp	r18, r20
    15e4:	35 07       	cpc	r19, r21
    15e6:	48 f0       	brcs	.+18     	; 0x15fa <malloc+0x11e>
    15e8:	4e 0f       	add	r20, r30
    15ea:	5f 1f       	adc	r21, r31
    15ec:	50 93 72 02 	sts	0x0272, r21
    15f0:	40 93 71 02 	sts	0x0271, r20
    15f4:	81 93       	st	Z+, r24
    15f6:	91 93       	st	Z+, r25
    15f8:	02 c0       	rjmp	.+4      	; 0x15fe <malloc+0x122>
    15fa:	e0 e0       	ldi	r30, 0x00	; 0
    15fc:	f0 e0       	ldi	r31, 0x00	; 0
    15fe:	cf 01       	movw	r24, r30
    1600:	df 91       	pop	r29
    1602:	cf 91       	pop	r28
    1604:	08 95       	ret

00001606 <free>:
    1606:	0f 93       	push	r16
    1608:	1f 93       	push	r17
    160a:	cf 93       	push	r28
    160c:	df 93       	push	r29
    160e:	00 97       	sbiw	r24, 0x00	; 0
    1610:	09 f4       	brne	.+2      	; 0x1614 <free+0xe>
    1612:	8c c0       	rjmp	.+280    	; 0x172c <free+0x126>
    1614:	fc 01       	movw	r30, r24
    1616:	32 97       	sbiw	r30, 0x02	; 2
    1618:	13 82       	std	Z+3, r1	; 0x03
    161a:	12 82       	std	Z+2, r1	; 0x02
    161c:	00 91 73 02 	lds	r16, 0x0273
    1620:	10 91 74 02 	lds	r17, 0x0274
    1624:	01 15       	cp	r16, r1
    1626:	11 05       	cpc	r17, r1
    1628:	81 f4       	brne	.+32     	; 0x164a <free+0x44>
    162a:	20 81       	ld	r18, Z
    162c:	31 81       	ldd	r19, Z+1	; 0x01
    162e:	82 0f       	add	r24, r18
    1630:	93 1f       	adc	r25, r19
    1632:	20 91 71 02 	lds	r18, 0x0271
    1636:	30 91 72 02 	lds	r19, 0x0272
    163a:	28 17       	cp	r18, r24
    163c:	39 07       	cpc	r19, r25
    163e:	79 f5       	brne	.+94     	; 0x169e <free+0x98>
    1640:	f0 93 72 02 	sts	0x0272, r31
    1644:	e0 93 71 02 	sts	0x0271, r30
    1648:	71 c0       	rjmp	.+226    	; 0x172c <free+0x126>
    164a:	d8 01       	movw	r26, r16
    164c:	40 e0       	ldi	r20, 0x00	; 0
    164e:	50 e0       	ldi	r21, 0x00	; 0
    1650:	ae 17       	cp	r26, r30
    1652:	bf 07       	cpc	r27, r31
    1654:	50 f4       	brcc	.+20     	; 0x166a <free+0x64>
    1656:	12 96       	adiw	r26, 0x02	; 2
    1658:	2d 91       	ld	r18, X+
    165a:	3c 91       	ld	r19, X
    165c:	13 97       	sbiw	r26, 0x03	; 3
    165e:	ad 01       	movw	r20, r26
    1660:	21 15       	cp	r18, r1
    1662:	31 05       	cpc	r19, r1
    1664:	09 f1       	breq	.+66     	; 0x16a8 <free+0xa2>
    1666:	d9 01       	movw	r26, r18
    1668:	f3 cf       	rjmp	.-26     	; 0x1650 <free+0x4a>
    166a:	9d 01       	movw	r18, r26
    166c:	da 01       	movw	r26, r20
    166e:	33 83       	std	Z+3, r19	; 0x03
    1670:	22 83       	std	Z+2, r18	; 0x02
    1672:	60 81       	ld	r22, Z
    1674:	71 81       	ldd	r23, Z+1	; 0x01
    1676:	86 0f       	add	r24, r22
    1678:	97 1f       	adc	r25, r23
    167a:	82 17       	cp	r24, r18
    167c:	93 07       	cpc	r25, r19
    167e:	69 f4       	brne	.+26     	; 0x169a <free+0x94>
    1680:	ec 01       	movw	r28, r24
    1682:	28 81       	ld	r18, Y
    1684:	39 81       	ldd	r19, Y+1	; 0x01
    1686:	26 0f       	add	r18, r22
    1688:	37 1f       	adc	r19, r23
    168a:	2e 5f       	subi	r18, 0xFE	; 254
    168c:	3f 4f       	sbci	r19, 0xFF	; 255
    168e:	31 83       	std	Z+1, r19	; 0x01
    1690:	20 83       	st	Z, r18
    1692:	8a 81       	ldd	r24, Y+2	; 0x02
    1694:	9b 81       	ldd	r25, Y+3	; 0x03
    1696:	93 83       	std	Z+3, r25	; 0x03
    1698:	82 83       	std	Z+2, r24	; 0x02
    169a:	45 2b       	or	r20, r21
    169c:	29 f4       	brne	.+10     	; 0x16a8 <free+0xa2>
    169e:	f0 93 74 02 	sts	0x0274, r31
    16a2:	e0 93 73 02 	sts	0x0273, r30
    16a6:	42 c0       	rjmp	.+132    	; 0x172c <free+0x126>
    16a8:	13 96       	adiw	r26, 0x03	; 3
    16aa:	fc 93       	st	X, r31
    16ac:	ee 93       	st	-X, r30
    16ae:	12 97       	sbiw	r26, 0x02	; 2
    16b0:	ed 01       	movw	r28, r26
    16b2:	49 91       	ld	r20, Y+
    16b4:	59 91       	ld	r21, Y+
    16b6:	9e 01       	movw	r18, r28
    16b8:	24 0f       	add	r18, r20
    16ba:	35 1f       	adc	r19, r21
    16bc:	e2 17       	cp	r30, r18
    16be:	f3 07       	cpc	r31, r19
    16c0:	71 f4       	brne	.+28     	; 0x16de <free+0xd8>
    16c2:	80 81       	ld	r24, Z
    16c4:	91 81       	ldd	r25, Z+1	; 0x01
    16c6:	84 0f       	add	r24, r20
    16c8:	95 1f       	adc	r25, r21
    16ca:	02 96       	adiw	r24, 0x02	; 2
    16cc:	11 96       	adiw	r26, 0x01	; 1
    16ce:	9c 93       	st	X, r25
    16d0:	8e 93       	st	-X, r24
    16d2:	82 81       	ldd	r24, Z+2	; 0x02
    16d4:	93 81       	ldd	r25, Z+3	; 0x03
    16d6:	13 96       	adiw	r26, 0x03	; 3
    16d8:	9c 93       	st	X, r25
    16da:	8e 93       	st	-X, r24
    16dc:	12 97       	sbiw	r26, 0x02	; 2
    16de:	e0 e0       	ldi	r30, 0x00	; 0
    16e0:	f0 e0       	ldi	r31, 0x00	; 0
    16e2:	d8 01       	movw	r26, r16
    16e4:	12 96       	adiw	r26, 0x02	; 2
    16e6:	8d 91       	ld	r24, X+
    16e8:	9c 91       	ld	r25, X
    16ea:	13 97       	sbiw	r26, 0x03	; 3
    16ec:	00 97       	sbiw	r24, 0x00	; 0
    16ee:	19 f0       	breq	.+6      	; 0x16f6 <free+0xf0>
    16f0:	f8 01       	movw	r30, r16
    16f2:	8c 01       	movw	r16, r24
    16f4:	f6 cf       	rjmp	.-20     	; 0x16e2 <free+0xdc>
    16f6:	8d 91       	ld	r24, X+
    16f8:	9c 91       	ld	r25, X
    16fa:	98 01       	movw	r18, r16
    16fc:	2e 5f       	subi	r18, 0xFE	; 254
    16fe:	3f 4f       	sbci	r19, 0xFF	; 255
    1700:	82 0f       	add	r24, r18
    1702:	93 1f       	adc	r25, r19
    1704:	20 91 71 02 	lds	r18, 0x0271
    1708:	30 91 72 02 	lds	r19, 0x0272
    170c:	28 17       	cp	r18, r24
    170e:	39 07       	cpc	r19, r25
    1710:	69 f4       	brne	.+26     	; 0x172c <free+0x126>
    1712:	30 97       	sbiw	r30, 0x00	; 0
    1714:	29 f4       	brne	.+10     	; 0x1720 <free+0x11a>
    1716:	10 92 74 02 	sts	0x0274, r1
    171a:	10 92 73 02 	sts	0x0273, r1
    171e:	02 c0       	rjmp	.+4      	; 0x1724 <free+0x11e>
    1720:	13 82       	std	Z+3, r1	; 0x03
    1722:	12 82       	std	Z+2, r1	; 0x02
    1724:	10 93 72 02 	sts	0x0272, r17
    1728:	00 93 71 02 	sts	0x0271, r16
    172c:	df 91       	pop	r29
    172e:	cf 91       	pop	r28
    1730:	1f 91       	pop	r17
    1732:	0f 91       	pop	r16
    1734:	08 95       	ret

00001736 <__itoa_ncheck>:
    1736:	bb 27       	eor	r27, r27
    1738:	4a 30       	cpi	r20, 0x0A	; 10
    173a:	31 f4       	brne	.+12     	; 0x1748 <__itoa_ncheck+0x12>
    173c:	99 23       	and	r25, r25
    173e:	22 f4       	brpl	.+8      	; 0x1748 <__itoa_ncheck+0x12>
    1740:	bd e2       	ldi	r27, 0x2D	; 45
    1742:	90 95       	com	r25
    1744:	81 95       	neg	r24
    1746:	9f 4f       	sbci	r25, 0xFF	; 255
    1748:	01 c0       	rjmp	.+2      	; 0x174c <__utoa_common>

0000174a <__utoa_ncheck>:
    174a:	bb 27       	eor	r27, r27

0000174c <__utoa_common>:
    174c:	fb 01       	movw	r30, r22
    174e:	55 27       	eor	r21, r21
    1750:	aa 27       	eor	r26, r26
    1752:	88 0f       	add	r24, r24
    1754:	99 1f       	adc	r25, r25
    1756:	aa 1f       	adc	r26, r26
    1758:	a4 17       	cp	r26, r20
    175a:	10 f0       	brcs	.+4      	; 0x1760 <__utoa_common+0x14>
    175c:	a4 1b       	sub	r26, r20
    175e:	83 95       	inc	r24
    1760:	50 51       	subi	r21, 0x10	; 16
    1762:	b9 f7       	brne	.-18     	; 0x1752 <__utoa_common+0x6>
    1764:	a0 5d       	subi	r26, 0xD0	; 208
    1766:	aa 33       	cpi	r26, 0x3A	; 58
    1768:	08 f0       	brcs	.+2      	; 0x176c <__utoa_common+0x20>
    176a:	a9 5d       	subi	r26, 0xD9	; 217
    176c:	a1 93       	st	Z+, r26
    176e:	00 97       	sbiw	r24, 0x00	; 0
    1770:	79 f7       	brne	.-34     	; 0x1750 <__utoa_common+0x4>
    1772:	b1 11       	cpse	r27, r1
    1774:	b1 93       	st	Z+, r27
    1776:	11 92       	st	Z+, r1
    1778:	cb 01       	movw	r24, r22
    177a:	00 c0       	rjmp	.+0      	; 0x177c <strrev>

0000177c <strrev>:
    177c:	dc 01       	movw	r26, r24
    177e:	fc 01       	movw	r30, r24
    1780:	67 2f       	mov	r22, r23
    1782:	71 91       	ld	r23, Z+
    1784:	77 23       	and	r23, r23
    1786:	e1 f7       	brne	.-8      	; 0x1780 <strrev+0x4>
    1788:	32 97       	sbiw	r30, 0x02	; 2
    178a:	04 c0       	rjmp	.+8      	; 0x1794 <strrev+0x18>
    178c:	7c 91       	ld	r23, X
    178e:	6d 93       	st	X+, r22
    1790:	70 83       	st	Z, r23
    1792:	62 91       	ld	r22, -Z
    1794:	ae 17       	cp	r26, r30
    1796:	bf 07       	cpc	r27, r31
    1798:	c8 f3       	brcs	.-14     	; 0x178c <strrev+0x10>
    179a:	08 95       	ret

0000179c <_exit>:
    179c:	f8 94       	cli

0000179e <__stop_program>:
    179e:	ff cf       	rjmp	.-2      	; 0x179e <__stop_program>
